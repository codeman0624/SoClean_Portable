

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Fri Feb 02 19:28:02 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	12F1501
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 1.44
    36                           ; Generated 14/09/2017 GMT
    37                           ; 
    38                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC12F1501 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  008C                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  0111                     	;# 
   111  0112                     	;# 
   112  0115                     	;# 
   113  0116                     	;# 
   114  0117                     	;# 
   115  0118                     	;# 
   116  0119                     	;# 
   117  011D                     	;# 
   118  018C                     	;# 
   119  0191                     	;# 
   120  0191                     	;# 
   121  0192                     	;# 
   122  0193                     	;# 
   123  0193                     	;# 
   124  0194                     	;# 
   125  0195                     	;# 
   126  0196                     	;# 
   127  0197                     	;# 
   128  020C                     	;# 
   129  0391                     	;# 
   130  0392                     	;# 
   131  0393                     	;# 
   132  0498                     	;# 
   133  0498                     	;# 
   134  0499                     	;# 
   135  049A                     	;# 
   136  049B                     	;# 
   137  049B                     	;# 
   138  049C                     	;# 
   139  049D                     	;# 
   140  049E                     	;# 
   141  049F                     	;# 
   142  0611                     	;# 
   143  0612                     	;# 
   144  0613                     	;# 
   145  0613                     	;# 
   146  0614                     	;# 
   147  0615                     	;# 
   148  0616                     	;# 
   149  0616                     	;# 
   150  0617                     	;# 
   151  0618                     	;# 
   152  0619                     	;# 
   153  0619                     	;# 
   154  061A                     	;# 
   155  061B                     	;# 
   156  061C                     	;# 
   157  061C                     	;# 
   158  0691                     	;# 
   159  0692                     	;# 
   160  0693                     	;# 
   161  0694                     	;# 
   162  0695                     	;# 
   163  0F0F                     	;# 
   164  0F10                     	;# 
   165  0F11                     	;# 
   166  0F12                     	;# 
   167  0F13                     	;# 
   168  0F14                     	;# 
   169  0F15                     	;# 
   170  0F16                     	;# 
   171  0F17                     	;# 
   172  0F18                     	;# 
   173  0F19                     	;# 
   174  0F1A                     	;# 
   175  0F1B                     	;# 
   176  0F1C                     	;# 
   177  0F1D                     	;# 
   178  0F1E                     	;# 
   179  0F1F                     	;# 
   180  0FE3                     	;# 
   181  0FE4                     	;# 
   182  0FE5                     	;# 
   183  0FE6                     	;# 
   184  0FE7                     	;# 
   185  0FE8                     	;# 
   186  0FE9                     	;# 
   187  0FEA                     	;# 
   188  0FEB                     	;# 
   189  0FED                     	;# 
   190  0FEE                     	;# 
   191  0FEF                     	;# 
   192  0000                     	;# 
   193  0001                     	;# 
   194  0002                     	;# 
   195  0003                     	;# 
   196  0004                     	;# 
   197  0005                     	;# 
   198  0006                     	;# 
   199  0007                     	;# 
   200  0008                     	;# 
   201  0009                     	;# 
   202  000A                     	;# 
   203  000B                     	;# 
   204  000C                     	;# 
   205  0011                     	;# 
   206  0012                     	;# 
   207  0013                     	;# 
   208  0015                     	;# 
   209  0016                     	;# 
   210  0016                     	;# 
   211  0017                     	;# 
   212  0018                     	;# 
   213  0019                     	;# 
   214  001A                     	;# 
   215  001B                     	;# 
   216  001C                     	;# 
   217  008C                     	;# 
   218  0091                     	;# 
   219  0092                     	;# 
   220  0093                     	;# 
   221  0095                     	;# 
   222  0096                     	;# 
   223  0097                     	;# 
   224  0099                     	;# 
   225  009A                     	;# 
   226  009B                     	;# 
   227  009B                     	;# 
   228  009C                     	;# 
   229  009D                     	;# 
   230  009E                     	;# 
   231  009F                     	;# 
   232  010C                     	;# 
   233  0111                     	;# 
   234  0112                     	;# 
   235  0115                     	;# 
   236  0116                     	;# 
   237  0117                     	;# 
   238  0118                     	;# 
   239  0119                     	;# 
   240  011D                     	;# 
   241  018C                     	;# 
   242  0191                     	;# 
   243  0191                     	;# 
   244  0192                     	;# 
   245  0193                     	;# 
   246  0193                     	;# 
   247  0194                     	;# 
   248  0195                     	;# 
   249  0196                     	;# 
   250  0197                     	;# 
   251  020C                     	;# 
   252  0391                     	;# 
   253  0392                     	;# 
   254  0393                     	;# 
   255  0498                     	;# 
   256  0498                     	;# 
   257  0499                     	;# 
   258  049A                     	;# 
   259  049B                     	;# 
   260  049B                     	;# 
   261  049C                     	;# 
   262  049D                     	;# 
   263  049E                     	;# 
   264  049F                     	;# 
   265  0611                     	;# 
   266  0612                     	;# 
   267  0613                     	;# 
   268  0613                     	;# 
   269  0614                     	;# 
   270  0615                     	;# 
   271  0616                     	;# 
   272  0616                     	;# 
   273  0617                     	;# 
   274  0618                     	;# 
   275  0619                     	;# 
   276  0619                     	;# 
   277  061A                     	;# 
   278  061B                     	;# 
   279  061C                     	;# 
   280  061C                     	;# 
   281  0691                     	;# 
   282  0692                     	;# 
   283  0693                     	;# 
   284  0694                     	;# 
   285  0695                     	;# 
   286  0F0F                     	;# 
   287  0F10                     	;# 
   288  0F11                     	;# 
   289  0F12                     	;# 
   290  0F13                     	;# 
   291  0F14                     	;# 
   292  0F15                     	;# 
   293  0F16                     	;# 
   294  0F17                     	;# 
   295  0F18                     	;# 
   296  0F19                     	;# 
   297  0F1A                     	;# 
   298  0F1B                     	;# 
   299  0F1C                     	;# 
   300  0F1D                     	;# 
   301  0F1E                     	;# 
   302  0F1F                     	;# 
   303  0FE3                     	;# 
   304  0FE4                     	;# 
   305  0FE5                     	;# 
   306  0FE6                     	;# 
   307  0FE7                     	;# 
   308  0FE8                     	;# 
   309  0FE9                     	;# 
   310  0FEA                     	;# 
   311  0FEB                     	;# 
   312  0FED                     	;# 
   313  0FEE                     	;# 
   314  0FEF                     	;# 
   315  0000                     	;# 
   316  0001                     	;# 
   317  0002                     	;# 
   318  0003                     	;# 
   319  0004                     	;# 
   320  0005                     	;# 
   321  0006                     	;# 
   322  0007                     	;# 
   323  0008                     	;# 
   324  0009                     	;# 
   325  000A                     	;# 
   326  000B                     	;# 
   327  000C                     	;# 
   328  0011                     	;# 
   329  0012                     	;# 
   330  0013                     	;# 
   331  0015                     	;# 
   332  0016                     	;# 
   333  0016                     	;# 
   334  0017                     	;# 
   335  0018                     	;# 
   336  0019                     	;# 
   337  001A                     	;# 
   338  001B                     	;# 
   339  001C                     	;# 
   340  008C                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  010C                     	;# 
   356  0111                     	;# 
   357  0112                     	;# 
   358  0115                     	;# 
   359  0116                     	;# 
   360  0117                     	;# 
   361  0118                     	;# 
   362  0119                     	;# 
   363  011D                     	;# 
   364  018C                     	;# 
   365  0191                     	;# 
   366  0191                     	;# 
   367  0192                     	;# 
   368  0193                     	;# 
   369  0193                     	;# 
   370  0194                     	;# 
   371  0195                     	;# 
   372  0196                     	;# 
   373  0197                     	;# 
   374  020C                     	;# 
   375  0391                     	;# 
   376  0392                     	;# 
   377  0393                     	;# 
   378  0498                     	;# 
   379  0498                     	;# 
   380  0499                     	;# 
   381  049A                     	;# 
   382  049B                     	;# 
   383  049B                     	;# 
   384  049C                     	;# 
   385  049D                     	;# 
   386  049E                     	;# 
   387  049F                     	;# 
   388  0611                     	;# 
   389  0612                     	;# 
   390  0613                     	;# 
   391  0613                     	;# 
   392  0614                     	;# 
   393  0615                     	;# 
   394  0616                     	;# 
   395  0616                     	;# 
   396  0617                     	;# 
   397  0618                     	;# 
   398  0619                     	;# 
   399  0619                     	;# 
   400  061A                     	;# 
   401  061B                     	;# 
   402  061C                     	;# 
   403  061C                     	;# 
   404  0691                     	;# 
   405  0692                     	;# 
   406  0693                     	;# 
   407  0694                     	;# 
   408  0695                     	;# 
   409  0F0F                     	;# 
   410  0F10                     	;# 
   411  0F11                     	;# 
   412  0F12                     	;# 
   413  0F13                     	;# 
   414  0F14                     	;# 
   415  0F15                     	;# 
   416  0F16                     	;# 
   417  0F17                     	;# 
   418  0F18                     	;# 
   419  0F19                     	;# 
   420  0F1A                     	;# 
   421  0F1B                     	;# 
   422  0F1C                     	;# 
   423  0F1D                     	;# 
   424  0F1E                     	;# 
   425  0F1F                     	;# 
   426  0FE3                     	;# 
   427  0FE4                     	;# 
   428  0FE5                     	;# 
   429  0FE6                     	;# 
   430  0FE7                     	;# 
   431  0FE8                     	;# 
   432  0FE9                     	;# 
   433  0FEA                     	;# 
   434  0FEB                     	;# 
   435  0FED                     	;# 
   436  0FEE                     	;# 
   437  0FEF                     	;# 
   438  0000                     	;# 
   439  0001                     	;# 
   440  0002                     	;# 
   441  0003                     	;# 
   442  0004                     	;# 
   443  0005                     	;# 
   444  0006                     	;# 
   445  0007                     	;# 
   446  0008                     	;# 
   447  0009                     	;# 
   448  000A                     	;# 
   449  000B                     	;# 
   450  000C                     	;# 
   451  0011                     	;# 
   452  0012                     	;# 
   453  0013                     	;# 
   454  0015                     	;# 
   455  0016                     	;# 
   456  0016                     	;# 
   457  0017                     	;# 
   458  0018                     	;# 
   459  0019                     	;# 
   460  001A                     	;# 
   461  001B                     	;# 
   462  001C                     	;# 
   463  008C                     	;# 
   464  0091                     	;# 
   465  0092                     	;# 
   466  0093                     	;# 
   467  0095                     	;# 
   468  0096                     	;# 
   469  0097                     	;# 
   470  0099                     	;# 
   471  009A                     	;# 
   472  009B                     	;# 
   473  009B                     	;# 
   474  009C                     	;# 
   475  009D                     	;# 
   476  009E                     	;# 
   477  009F                     	;# 
   478  010C                     	;# 
   479  0111                     	;# 
   480  0112                     	;# 
   481  0115                     	;# 
   482  0116                     	;# 
   483  0117                     	;# 
   484  0118                     	;# 
   485  0119                     	;# 
   486  011D                     	;# 
   487  018C                     	;# 
   488  0191                     	;# 
   489  0191                     	;# 
   490  0192                     	;# 
   491  0193                     	;# 
   492  0193                     	;# 
   493  0194                     	;# 
   494  0195                     	;# 
   495  0196                     	;# 
   496  0197                     	;# 
   497  020C                     	;# 
   498  0391                     	;# 
   499  0392                     	;# 
   500  0393                     	;# 
   501  0498                     	;# 
   502  0498                     	;# 
   503  0499                     	;# 
   504  049A                     	;# 
   505  049B                     	;# 
   506  049B                     	;# 
   507  049C                     	;# 
   508  049D                     	;# 
   509  049E                     	;# 
   510  049F                     	;# 
   511  0611                     	;# 
   512  0612                     	;# 
   513  0613                     	;# 
   514  0613                     	;# 
   515  0614                     	;# 
   516  0615                     	;# 
   517  0616                     	;# 
   518  0616                     	;# 
   519  0617                     	;# 
   520  0618                     	;# 
   521  0619                     	;# 
   522  0619                     	;# 
   523  061A                     	;# 
   524  061B                     	;# 
   525  061C                     	;# 
   526  061C                     	;# 
   527  0691                     	;# 
   528  0692                     	;# 
   529  0693                     	;# 
   530  0694                     	;# 
   531  0695                     	;# 
   532  0F0F                     	;# 
   533  0F10                     	;# 
   534  0F11                     	;# 
   535  0F12                     	;# 
   536  0F13                     	;# 
   537  0F14                     	;# 
   538  0F15                     	;# 
   539  0F16                     	;# 
   540  0F17                     	;# 
   541  0F18                     	;# 
   542  0F19                     	;# 
   543  0F1A                     	;# 
   544  0F1B                     	;# 
   545  0F1C                     	;# 
   546  0F1D                     	;# 
   547  0F1E                     	;# 
   548  0F1F                     	;# 
   549  0FE3                     	;# 
   550  0FE4                     	;# 
   551  0FE5                     	;# 
   552  0FE6                     	;# 
   553  0FE7                     	;# 
   554  0FE8                     	;# 
   555  0FE9                     	;# 
   556  0FEA                     	;# 
   557  0FEB                     	;# 
   558  0FED                     	;# 
   559  0FEE                     	;# 
   560  0FEF                     	;# 
   561  0000                     	;# 
   562  0001                     	;# 
   563  0002                     	;# 
   564  0003                     	;# 
   565  0004                     	;# 
   566  0005                     	;# 
   567  0006                     	;# 
   568  0007                     	;# 
   569  0008                     	;# 
   570  0009                     	;# 
   571  000A                     	;# 
   572  000B                     	;# 
   573  000C                     	;# 
   574  0011                     	;# 
   575  0012                     	;# 
   576  0013                     	;# 
   577  0015                     	;# 
   578  0016                     	;# 
   579  0016                     	;# 
   580  0017                     	;# 
   581  0018                     	;# 
   582  0019                     	;# 
   583  001A                     	;# 
   584  001B                     	;# 
   585  001C                     	;# 
   586  008C                     	;# 
   587  0091                     	;# 
   588  0092                     	;# 
   589  0093                     	;# 
   590  0095                     	;# 
   591  0096                     	;# 
   592  0097                     	;# 
   593  0099                     	;# 
   594  009A                     	;# 
   595  009B                     	;# 
   596  009B                     	;# 
   597  009C                     	;# 
   598  009D                     	;# 
   599  009E                     	;# 
   600  009F                     	;# 
   601  010C                     	;# 
   602  0111                     	;# 
   603  0112                     	;# 
   604  0115                     	;# 
   605  0116                     	;# 
   606  0117                     	;# 
   607  0118                     	;# 
   608  0119                     	;# 
   609  011D                     	;# 
   610  018C                     	;# 
   611  0191                     	;# 
   612  0191                     	;# 
   613  0192                     	;# 
   614  0193                     	;# 
   615  0193                     	;# 
   616  0194                     	;# 
   617  0195                     	;# 
   618  0196                     	;# 
   619  0197                     	;# 
   620  020C                     	;# 
   621  0391                     	;# 
   622  0392                     	;# 
   623  0393                     	;# 
   624  0498                     	;# 
   625  0498                     	;# 
   626  0499                     	;# 
   627  049A                     	;# 
   628  049B                     	;# 
   629  049B                     	;# 
   630  049C                     	;# 
   631  049D                     	;# 
   632  049E                     	;# 
   633  049F                     	;# 
   634  0611                     	;# 
   635  0612                     	;# 
   636  0613                     	;# 
   637  0613                     	;# 
   638  0614                     	;# 
   639  0615                     	;# 
   640  0616                     	;# 
   641  0616                     	;# 
   642  0617                     	;# 
   643  0618                     	;# 
   644  0619                     	;# 
   645  0619                     	;# 
   646  061A                     	;# 
   647  061B                     	;# 
   648  061C                     	;# 
   649  061C                     	;# 
   650  0691                     	;# 
   651  0692                     	;# 
   652  0693                     	;# 
   653  0694                     	;# 
   654  0695                     	;# 
   655  0F0F                     	;# 
   656  0F10                     	;# 
   657  0F11                     	;# 
   658  0F12                     	;# 
   659  0F13                     	;# 
   660  0F14                     	;# 
   661  0F15                     	;# 
   662  0F16                     	;# 
   663  0F17                     	;# 
   664  0F18                     	;# 
   665  0F19                     	;# 
   666  0F1A                     	;# 
   667  0F1B                     	;# 
   668  0F1C                     	;# 
   669  0F1D                     	;# 
   670  0F1E                     	;# 
   671  0F1F                     	;# 
   672  0FE3                     	;# 
   673  0FE4                     	;# 
   674  0FE5                     	;# 
   675  0FE6                     	;# 
   676  0FE7                     	;# 
   677  0FE8                     	;# 
   678  0FE9                     	;# 
   679  0FEA                     	;# 
   680  0FEB                     	;# 
   681  0FED                     	;# 
   682  0FEE                     	;# 
   683  0FEF                     	;# 
   684  0000                     	;# 
   685  0001                     	;# 
   686  0002                     	;# 
   687  0003                     	;# 
   688  0004                     	;# 
   689  0005                     	;# 
   690  0006                     	;# 
   691  0007                     	;# 
   692  0008                     	;# 
   693  0009                     	;# 
   694  000A                     	;# 
   695  000B                     	;# 
   696  000C                     	;# 
   697  0011                     	;# 
   698  0012                     	;# 
   699  0013                     	;# 
   700  0015                     	;# 
   701  0016                     	;# 
   702  0016                     	;# 
   703  0017                     	;# 
   704  0018                     	;# 
   705  0019                     	;# 
   706  001A                     	;# 
   707  001B                     	;# 
   708  001C                     	;# 
   709  008C                     	;# 
   710  0091                     	;# 
   711  0092                     	;# 
   712  0093                     	;# 
   713  0095                     	;# 
   714  0096                     	;# 
   715  0097                     	;# 
   716  0099                     	;# 
   717  009A                     	;# 
   718  009B                     	;# 
   719  009B                     	;# 
   720  009C                     	;# 
   721  009D                     	;# 
   722  009E                     	;# 
   723  009F                     	;# 
   724  010C                     	;# 
   725  0111                     	;# 
   726  0112                     	;# 
   727  0115                     	;# 
   728  0116                     	;# 
   729  0117                     	;# 
   730  0118                     	;# 
   731  0119                     	;# 
   732  011D                     	;# 
   733  018C                     	;# 
   734  0191                     	;# 
   735  0191                     	;# 
   736  0192                     	;# 
   737  0193                     	;# 
   738  0193                     	;# 
   739  0194                     	;# 
   740  0195                     	;# 
   741  0196                     	;# 
   742  0197                     	;# 
   743  020C                     	;# 
   744  0391                     	;# 
   745  0392                     	;# 
   746  0393                     	;# 
   747  0498                     	;# 
   748  0498                     	;# 
   749  0499                     	;# 
   750  049A                     	;# 
   751  049B                     	;# 
   752  049B                     	;# 
   753  049C                     	;# 
   754  049D                     	;# 
   755  049E                     	;# 
   756  049F                     	;# 
   757  0611                     	;# 
   758  0612                     	;# 
   759  0613                     	;# 
   760  0613                     	;# 
   761  0614                     	;# 
   762  0615                     	;# 
   763  0616                     	;# 
   764  0616                     	;# 
   765  0617                     	;# 
   766  0618                     	;# 
   767  0619                     	;# 
   768  0619                     	;# 
   769  061A                     	;# 
   770  061B                     	;# 
   771  061C                     	;# 
   772  061C                     	;# 
   773  0691                     	;# 
   774  0692                     	;# 
   775  0693                     	;# 
   776  0694                     	;# 
   777  0695                     	;# 
   778  0F0F                     	;# 
   779  0F10                     	;# 
   780  0F11                     	;# 
   781  0F12                     	;# 
   782  0F13                     	;# 
   783  0F14                     	;# 
   784  0F15                     	;# 
   785  0F16                     	;# 
   786  0F17                     	;# 
   787  0F18                     	;# 
   788  0F19                     	;# 
   789  0F1A                     	;# 
   790  0F1B                     	;# 
   791  0F1C                     	;# 
   792  0F1D                     	;# 
   793  0F1E                     	;# 
   794  0F1F                     	;# 
   795  0FE3                     	;# 
   796  0FE4                     	;# 
   797  0FE5                     	;# 
   798  0FE6                     	;# 
   799  0FE7                     	;# 
   800  0FE8                     	;# 
   801  0FE9                     	;# 
   802  0FEA                     	;# 
   803  0FEB                     	;# 
   804  0FED                     	;# 
   805  0FEE                     	;# 
   806  0FEF                     	;# 
   807  0000                     	;# 
   808  0001                     	;# 
   809  0002                     	;# 
   810  0003                     	;# 
   811  0004                     	;# 
   812  0005                     	;# 
   813  0006                     	;# 
   814  0007                     	;# 
   815  0008                     	;# 
   816  0009                     	;# 
   817  000A                     	;# 
   818  000B                     	;# 
   819  000C                     	;# 
   820  0011                     	;# 
   821  0012                     	;# 
   822  0013                     	;# 
   823  0015                     	;# 
   824  0016                     	;# 
   825  0016                     	;# 
   826  0017                     	;# 
   827  0018                     	;# 
   828  0019                     	;# 
   829  001A                     	;# 
   830  001B                     	;# 
   831  001C                     	;# 
   832  008C                     	;# 
   833  0091                     	;# 
   834  0092                     	;# 
   835  0093                     	;# 
   836  0095                     	;# 
   837  0096                     	;# 
   838  0097                     	;# 
   839  0099                     	;# 
   840  009A                     	;# 
   841  009B                     	;# 
   842  009B                     	;# 
   843  009C                     	;# 
   844  009D                     	;# 
   845  009E                     	;# 
   846  009F                     	;# 
   847  010C                     	;# 
   848  0111                     	;# 
   849  0112                     	;# 
   850  0115                     	;# 
   851  0116                     	;# 
   852  0117                     	;# 
   853  0118                     	;# 
   854  0119                     	;# 
   855  011D                     	;# 
   856  018C                     	;# 
   857  0191                     	;# 
   858  0191                     	;# 
   859  0192                     	;# 
   860  0193                     	;# 
   861  0193                     	;# 
   862  0194                     	;# 
   863  0195                     	;# 
   864  0196                     	;# 
   865  0197                     	;# 
   866  020C                     	;# 
   867  0391                     	;# 
   868  0392                     	;# 
   869  0393                     	;# 
   870  0498                     	;# 
   871  0498                     	;# 
   872  0499                     	;# 
   873  049A                     	;# 
   874  049B                     	;# 
   875  049B                     	;# 
   876  049C                     	;# 
   877  049D                     	;# 
   878  049E                     	;# 
   879  049F                     	;# 
   880  0611                     	;# 
   881  0612                     	;# 
   882  0613                     	;# 
   883  0613                     	;# 
   884  0614                     	;# 
   885  0615                     	;# 
   886  0616                     	;# 
   887  0616                     	;# 
   888  0617                     	;# 
   889  0618                     	;# 
   890  0619                     	;# 
   891  0619                     	;# 
   892  061A                     	;# 
   893  061B                     	;# 
   894  061C                     	;# 
   895  061C                     	;# 
   896  0691                     	;# 
   897  0692                     	;# 
   898  0693                     	;# 
   899  0694                     	;# 
   900  0695                     	;# 
   901  0F0F                     	;# 
   902  0F10                     	;# 
   903  0F11                     	;# 
   904  0F12                     	;# 
   905  0F13                     	;# 
   906  0F14                     	;# 
   907  0F15                     	;# 
   908  0F16                     	;# 
   909  0F17                     	;# 
   910  0F18                     	;# 
   911  0F19                     	;# 
   912  0F1A                     	;# 
   913  0F1B                     	;# 
   914  0F1C                     	;# 
   915  0F1D                     	;# 
   916  0F1E                     	;# 
   917  0F1F                     	;# 
   918  0FE3                     	;# 
   919  0FE4                     	;# 
   920  0FE5                     	;# 
   921  0FE6                     	;# 
   922  0FE7                     	;# 
   923  0FE8                     	;# 
   924  0FE9                     	;# 
   925  0FEA                     	;# 
   926  0FEB                     	;# 
   927  0FED                     	;# 
   928  0FEE                     	;# 
   929  0FEF                     	;# 
   930  0000                     	;# 
   931  0001                     	;# 
   932  0002                     	;# 
   933  0003                     	;# 
   934  0004                     	;# 
   935  0005                     	;# 
   936  0006                     	;# 
   937  0007                     	;# 
   938  0008                     	;# 
   939  0009                     	;# 
   940  000A                     	;# 
   941  000B                     	;# 
   942  000C                     	;# 
   943  0011                     	;# 
   944  0012                     	;# 
   945  0013                     	;# 
   946  0015                     	;# 
   947  0016                     	;# 
   948  0016                     	;# 
   949  0017                     	;# 
   950  0018                     	;# 
   951  0019                     	;# 
   952  001A                     	;# 
   953  001B                     	;# 
   954  001C                     	;# 
   955  008C                     	;# 
   956  0091                     	;# 
   957  0092                     	;# 
   958  0093                     	;# 
   959  0095                     	;# 
   960  0096                     	;# 
   961  0097                     	;# 
   962  0099                     	;# 
   963  009A                     	;# 
   964  009B                     	;# 
   965  009B                     	;# 
   966  009C                     	;# 
   967  009D                     	;# 
   968  009E                     	;# 
   969  009F                     	;# 
   970  010C                     	;# 
   971  0111                     	;# 
   972  0112                     	;# 
   973  0115                     	;# 
   974  0116                     	;# 
   975  0117                     	;# 
   976  0118                     	;# 
   977  0119                     	;# 
   978  011D                     	;# 
   979  018C                     	;# 
   980  0191                     	;# 
   981  0191                     	;# 
   982  0192                     	;# 
   983  0193                     	;# 
   984  0193                     	;# 
   985  0194                     	;# 
   986  0195                     	;# 
   987  0196                     	;# 
   988  0197                     	;# 
   989  020C                     	;# 
   990  0391                     	;# 
   991  0392                     	;# 
   992  0393                     	;# 
   993  0498                     	;# 
   994  0498                     	;# 
   995  0499                     	;# 
   996  049A                     	;# 
   997  049B                     	;# 
   998  049B                     	;# 
   999  049C                     	;# 
  1000  049D                     	;# 
  1001  049E                     	;# 
  1002  049F                     	;# 
  1003  0611                     	;# 
  1004  0612                     	;# 
  1005  0613                     	;# 
  1006  0613                     	;# 
  1007  0614                     	;# 
  1008  0615                     	;# 
  1009  0616                     	;# 
  1010  0616                     	;# 
  1011  0617                     	;# 
  1012  0618                     	;# 
  1013  0619                     	;# 
  1014  0619                     	;# 
  1015  061A                     	;# 
  1016  061B                     	;# 
  1017  061C                     	;# 
  1018  061C                     	;# 
  1019  0691                     	;# 
  1020  0692                     	;# 
  1021  0693                     	;# 
  1022  0694                     	;# 
  1023  0695                     	;# 
  1024  0F0F                     	;# 
  1025  0F10                     	;# 
  1026  0F11                     	;# 
  1027  0F12                     	;# 
  1028  0F13                     	;# 
  1029  0F14                     	;# 
  1030  0F15                     	;# 
  1031  0F16                     	;# 
  1032  0F17                     	;# 
  1033  0F18                     	;# 
  1034  0F19                     	;# 
  1035  0F1A                     	;# 
  1036  0F1B                     	;# 
  1037  0F1C                     	;# 
  1038  0F1D                     	;# 
  1039  0F1E                     	;# 
  1040  0F1F                     	;# 
  1041  0FE3                     	;# 
  1042  0FE4                     	;# 
  1043  0FE5                     	;# 
  1044  0FE6                     	;# 
  1045  0FE7                     	;# 
  1046  0FE8                     	;# 
  1047  0FE9                     	;# 
  1048  0FEA                     	;# 
  1049  0FEB                     	;# 
  1050  0FED                     	;# 
  1051  0FEE                     	;# 
  1052  0FEF                     	;# 
  1053                           
  1054 ;; Function _TMR0_DefaultInterruptHandler is unused but had its address taken
  1055  0000                     
  1056 ;; Function _TMR2_DefaultInterruptHandler is unused but had its address taken
  1057  0000                     
  1058                           	psect	idataCOMMON
  1059  015A                     __pidataCOMMON:	
  1060                           
  1061                           ;initializer for _CycleTime
  1062  015A  340F               	retlw	15
  1063  015B  3400               	retlw	0
  1064                           
  1065                           ;initializer for _StartupCounter
  1066  015C  3478               	retlw	120
  1067                           
  1068                           	psect	nvCOMMON
  1069  0075                     __pnvCOMMON:	
  1070  0075                     _timer1ReloadVal:	
  1071  0075                     	ds	2
  1072  0077                     _timer0ReloadVal:	
  1073  0077                     	ds	1
  1074  0078                     _Counter:	
  1075  0078                     	ds	1
  1076                           
  1077                           	psect	nvBANK0
  1078  0020                     __pnvBANK0:	
  1079  0020                     _TMR2_InterruptHandler:	
  1080  0020                     	ds	2
  1081  0022                     _TMR0_InterruptHandler:	
  1082  0022                     	ds	2
  1083  0024                     _TMR1_InterruptHandler:	
  1084  0024                     	ds	2
  1085  000C                     _PORTAbits	set	12
  1086  001C                     _T2CONbits	set	28
  1087  001A                     _TMR2	set	26
  1088  001B                     _PR2	set	27
  1089  001C                     _T2CON	set	28
  1090  0015                     _TMR0	set	21
  1091  0019                     _T1GCONbits	set	25
  1092  0018                     _T1CONbits	set	24
  1093  0016                     _TMR1L	set	22
  1094  0017                     _TMR1H	set	23
  1095  0019                     _T1GCON	set	25
  1096  0018                     _T1CON	set	24
  1097  000B                     _INTCONbits	set	11
  1098  0011                     _PIR1bits	set	17
  1099  0097                     _WDTCON	set	151
  1100  0099                     _OSCCON	set	153
  1101  0095                     _OPTION_REG	set	149
  1102  009D                     _ADCON0bits	set	157
  1103  0091                     _PIE1bits	set	145
  1104  009C                     _ADRESH	set	156
  1105  009B                     _ADRESL	set	155
  1106  009F                     _ADCON2	set	159
  1107  009E                     _ADCON1	set	158
  1108  009D                     _ADCON0	set	157
  1109  0095                     _OPTION_REGbits	set	149
  1110  008C                     _TRISA	set	140
  1111  010C                     _LATAbits	set	268
  1112  011D                     _APFCON	set	285
  1113  010C                     _LATA	set	268
  1114  018C                     _ANSELA	set	396
  1115  020C                     _WPUA	set	524
  1116                           
  1117                           ; #config settings
  1118  0000                     
  1119                           	psect	cinit
  1120  0031                     start_initialization:	
  1121  0031                     __initialization:	
  1122                           
  1123                           ; Initialize objects allocated to COMMON
  1124  0031  215A               	fcall	__pidataCOMMON	;fetch initializer
  1125  0032  00F9               	movwf	__pdataCOMMON& (0+127)
  1126  0033  215B               	fcall	__pidataCOMMON+1	;fetch initializer
  1127  0034  00FA               	movwf	(__pdataCOMMON+1)& (0+127)
  1128  0035  215C               	fcall	__pidataCOMMON+2	;fetch initializer
  1129  0036  00FB               	movwf	(__pdataCOMMON+2)& (0+127)
  1130                           
  1131                           ; Clear objects allocated to COMMON
  1132  0037  01FC               	clrf	__pbssCOMMON& (0+127)
  1133  0038                     end_of_initialization:	
  1134                           ;End of C runtime variable initialization code
  1135                           
  1136  0038                     __end_of__initialization:	
  1137  0038  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1138  0039  0020               	movlb	0
  1139  003A  283B               	ljmp	_main	;jump to C main() function
  1140                           
  1141                           	psect	bssCOMMON
  1142  007C                     __pbssCOMMON:	
  1143  007C                     _RunCycle:	
  1144  007C                     	ds	1
  1145                           
  1146                           	psect	dataCOMMON
  1147  0079                     __pdataCOMMON:	
  1148  0079                     _CycleTime:	
  1149  0079                     	ds	2
  1150  007B                     _StartupCounter:	
  1151  007B                     	ds	1
  1152                           
  1153                           	psect	cstackCOMMON
  1154  0070                     __pcstackCOMMON:	
  1155  0070                     ?_TMR0_ISR:	
  1156  0070                     ??_TMR0_ISR:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0070                     ?_TMR2_ISR:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162  0070                     ??_TMR2_ISR:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165  0070                     ?_TMR1_ISR:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168  0070                     ??_TMR1_ISR:	
  1169                           ; 1 bytes @ 0x0
  1170                           
  1171  0070                     ?_TMR1_DefaultInterruptHandler:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174  0070                     ??_TMR1_DefaultInterruptHandler:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177  0070                     ?_TMR1_StartTimer:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180  0070                     ?_OSCILLATOR_Initialize:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183  0070                     ?_WDT_Initialize:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186  0070                     ?_TMR2_Initialize:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189  0070                     ?_TMR2_StartTimer:	
  1190                           ; 1 bytes @ 0x0
  1191                           
  1192  0070                     ?_PIN_MANAGER_Initialize:	
  1193                           ; 1 bytes @ 0x0
  1194                           
  1195  0070                     ?_ADC_Initialize:	
  1196                           ; 1 bytes @ 0x0
  1197                           
  1198  0070                     ?_ADC_ISR:	
  1199                           ; 1 bytes @ 0x0
  1200                           
  1201  0070                     ??_ADC_ISR:	
  1202                           ; 1 bytes @ 0x0
  1203                           
  1204  0070                     ?_INTERRUPT_InterruptManager:	
  1205                           ; 1 bytes @ 0x0
  1206                           
  1207  0070                     ??_INTERRUPT_InterruptManager:	
  1208                           ; 1 bytes @ 0x0
  1209                           
  1210  0070                     ?_TMR1_Initialize:	
  1211                           ; 1 bytes @ 0x0
  1212                           
  1213  0070                     ?_TMR0_Initialize:	
  1214                           ; 1 bytes @ 0x0
  1215                           
  1216  0070                     ?_SYSTEM_Initialize:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219  0070                     ?_main:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222                           
  1223                           ; 1 bytes @ 0x0
  1224  0070                     	ds	1
  1225  0071                     ?_TMR1_SetInterruptHandler:	
  1226  0071                     ??_TMR1_StartTimer:	
  1227                           ; 1 bytes @ 0x1
  1228                           
  1229  0071                     ?_TMR0_SetInterruptHandler:	
  1230                           ; 1 bytes @ 0x1
  1231                           
  1232  0071                     ??_OSCILLATOR_Initialize:	
  1233                           ; 1 bytes @ 0x1
  1234                           
  1235  0071                     ??_WDT_Initialize:	
  1236                           ; 1 bytes @ 0x1
  1237                           
  1238  0071                     ?_TMR2_SetInterruptHandler:	
  1239                           ; 1 bytes @ 0x1
  1240                           
  1241  0071                     ??_TMR2_StartTimer:	
  1242                           ; 1 bytes @ 0x1
  1243                           
  1244  0071                     ??_PIN_MANAGER_Initialize:	
  1245                           ; 1 bytes @ 0x1
  1246                           
  1247  0071                     ??_ADC_Initialize:	
  1248                           ; 1 bytes @ 0x1
  1249                           
  1250  0071                     ?_ADC_GetConversion:	
  1251                           ; 1 bytes @ 0x1
  1252                           
  1253  0071                     TMR1_SetInterruptHandler@InterruptHandler:	
  1254                           ; 2 bytes @ 0x1
  1255                           
  1256  0071                     TMR0_SetInterruptHandler@InterruptHandler:	
  1257                           ; 2 bytes @ 0x1
  1258                           
  1259  0071                     TMR2_SetInterruptHandler@InterruptHandler:	
  1260                           ; 2 bytes @ 0x1
  1261                           
  1262                           
  1263                           ; 2 bytes @ 0x1
  1264  0071                     	ds	2
  1265  0073                     ??_TMR1_SetInterruptHandler:	
  1266  0073                     ??_TMR0_SetInterruptHandler:	
  1267                           ; 1 bytes @ 0x3
  1268                           
  1269  0073                     ??_TMR2_Initialize:	
  1270                           ; 1 bytes @ 0x3
  1271                           
  1272  0073                     ??_TMR2_SetInterruptHandler:	
  1273                           ; 1 bytes @ 0x3
  1274                           
  1275  0073                     ??_ADC_GetConversion:	
  1276                           ; 1 bytes @ 0x3
  1277                           
  1278  0073                     ??_TMR1_Initialize:	
  1279                           ; 1 bytes @ 0x3
  1280                           
  1281  0073                     ??_TMR0_Initialize:	
  1282                           ; 1 bytes @ 0x3
  1283                           
  1284                           
  1285                           ; 1 bytes @ 0x3
  1286  0073                     	ds	1
  1287  0074                     ??_SYSTEM_Initialize:	
  1288  0074                     ADC_GetConversion@channel:	
  1289                           ; 1 bytes @ 0x4
  1290                           
  1291                           
  1292                           ; 1 bytes @ 0x4
  1293  0074                     	ds	1
  1294                           
  1295                           	psect	cstackBANK0
  1296  0026                     __pcstackBANK0:	
  1297  0026                     ??_main:	
  1298                           
  1299                           ; 1 bytes @ 0x0
  1300  0026                     	ds	1
  1301                           
  1302                           	psect	maintext
  1303  003B                     __pmaintext:	
  1304 ;;
  1305 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1306 ;;
  1307 ;; *************** function _main *****************
  1308 ;; Defined at:
  1309 ;;		line 49 in file "main.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;		None
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;		None
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  1    wreg      void 
  1316 ;; Registers used:
  1317 ;;		wreg, status,2, status,0, pclath, cstack
  1318 ;; Tracked objects:
  1319 ;;		On entry : B1F/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMMON   BANK0
  1323 ;;      Params:         0       0
  1324 ;;      Locals:         0       0
  1325 ;;      Temps:          0       1
  1326 ;;      Totals:         0       1
  1327 ;;Total ram usage:        1 bytes
  1328 ;; Hardware stack levels required when called:    6
  1329 ;; This function calls:
  1330 ;;		_ADC_GetConversion
  1331 ;;		_SYSTEM_Initialize
  1332 ;; This function is called by:
  1333 ;;		Startup code after reset
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           
  1338                           ;psect for function _main
  1339  003B                     _main:	
  1340                           
  1341                           ;main.c: 52: SYSTEM_Initialize();
  1342                           
  1343                           ;incstack = 0
  1344                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1345  003B  2138               	fcall	_SYSTEM_Initialize
  1346                           
  1347                           ;main.c: 58: (INTCONbits.GIE = 1);
  1348  003C  178B               	bsf	11,7	;volatile
  1349                           
  1350                           ;main.c: 61: (INTCONbits.PEIE = 1);
  1351  003D  170B               	bsf	11,6	;volatile
  1352                           
  1353                           ;main.c: 70: do { LATAbits.LATA1 = 0; } while(0);
  1354  003E  0022               	movlb	2	; select bank2
  1355  003F  108C               	bcf	12,1	;volatile
  1356                           
  1357                           ;main.c: 71: do { LATAbits.LATA0 = 0; } while(0);
  1358  0040  100C               	bcf	12,0	;volatile
  1359                           
  1360                           ;main.c: 72: do { LATAbits.LATA5 = 0; } while(0);
  1361  0041  128C               	bcf	12,5	;volatile
  1362                           
  1363                           ;main.c: 75: Counter = 10;
  1364  0042  300A               	movlw	10
  1365  0043  0020               	movlb	0	; select bank0
  1366  0044  00A6               	movwf	??_main
  1367  0045  0826               	movf	??_main,w
  1368  0046  00F8               	movwf	_Counter
  1369  0047                     l1119:	
  1370                           ;main.c: 76: while(Counter--)
  1371                           
  1372  0047  3001               	movlw	1
  1373  0048  02F8               	subwf	_Counter,f
  1374  0049  0A78               	incf	_Counter,w
  1375  004A  1903               	btfsc	3,2
  1376  004B  2856               	goto	l1121
  1377                           
  1378                           ;main.c: 77: {
  1379                           ;main.c: 78: _delay((unsigned long)((50)*(500000/4000.0)));
  1380  004C  3009               	movlw	9
  1381  004D  0020               	movlb	0	; select bank0
  1382  004E  00A6               	movwf	??_main
  1383  004F  301C               	movlw	28
  1384  0050                     u537:	
  1385  0050  0B89               	decfsz	9,f
  1386  0051  2850               	goto	u537
  1387  0052  0BA6               	decfsz	??_main,f
  1388  0053  2850               	goto	u537
  1389  0054  0000               	nop
  1390  0055  2847               	goto	l1119
  1391  0056                     l1121:	
  1392                           
  1393                           ;main.c: 79: }
  1394                           ;main.c: 84: if(ADC_GetConversion(ADC_Input) < 485)
  1395  0056  3002               	movlw	2
  1396  0057  20CA               	fcall	_ADC_GetConversion
  1397  0058  3001               	movlw	1
  1398  0059  0272               	subwf	?_ADC_GetConversion+1,w
  1399  005A  30E5               	movlw	229
  1400  005B  1903               	skipnz
  1401  005C  0271               	subwf	?_ADC_GetConversion,w
  1402  005D  1803               	skipnc
  1403  005E  2863               	goto	l1123
  1404                           
  1405                           ;main.c: 85: {
  1406                           ;main.c: 86: do { LATAbits.LATA0 = 1; } while(0);
  1407  005F  0022               	movlb	2	; select bank2
  1408  0060  140C               	bsf	12,0	;volatile
  1409  0061  0063               	sleep	;# 
  1410                           
  1411                           ;main.c: 88: }
  1412  0062  289A               	goto	l343
  1413  0063                     l1123:	
  1414                           ;main.c: 90: else
  1415                           ;main.c: 91: {
  1416                           ;main.c: 92: while(1)
  1417                           
  1418                           
  1419                           ;main.c: 93: {
  1420                           ;main.c: 94: RunCycle = 0;
  1421  0063  01FC               	clrf	_RunCycle
  1422  0064                     l322:	
  1423                           ;main.c: 96: while(PORTAbits.RA3)
  1424                           
  1425  0064  0020               	movlb	0	; select bank0
  1426  0065  1D8C               	btfss	12,3	;volatile
  1427  0066  286C               	goto	l1129
  1428                           
  1429                           ;main.c: 97: {
  1430                           ;main.c: 99: if(StartupCounter == 0)
  1431  0067  087B               	movf	_StartupCounter,w	;volatile
  1432  0068  1D03               	btfss	3,2
  1433  0069  2864               	goto	l322
  1434  006A  0063               	sleep	;# 
  1435  006B  2864               	goto	l322
  1436  006C                     l1129:	
  1437                           
  1438                           ;main.c: 102: }
  1439                           ;main.c: 103: }
  1440                           ;main.c: 104: _delay((unsigned long)((50)*(500000/4000.0)));
  1441  006C  3009               	movlw	9
  1442  006D  0020               	movlb	0	; select bank0
  1443  006E  00A6               	movwf	??_main
  1444  006F  301C               	movlw	28
  1445  0070                     u547:	
  1446  0070  0B89               	decfsz	9,f
  1447  0071  2870               	goto	u547
  1448  0072  0BA6               	decfsz	??_main,f
  1449  0073  2870               	goto	u547
  1450  0074  0000               	nop
  1451                           
  1452                           ;main.c: 106: if(!PORTAbits.RA3)
  1453  0075  0020               	movlb	0	; select bank0
  1454  0076  198C               	btfsc	12,3	;volatile
  1455  0077  2863               	goto	l1123
  1456                           
  1457                           ;main.c: 109: }
  1458                           ;main.c: 110: }
  1459                           ;main.c: 111: INTCONbits.TMR0IE = 0;
  1460                           
  1461                           ;main.c: 107: {
  1462                           ;main.c: 108: break;
  1463  0078  128B               	bcf	11,5	;volatile
  1464                           
  1465                           ;main.c: 115: RunCycle = 1;
  1466  0079  01FC               	clrf	_RunCycle
  1467  007A  0AFC               	incf	_RunCycle,f
  1468  007B                     l1135:	
  1469                           ;main.c: 118: while(CycleTime > 0)
  1470                           
  1471  007B  087A               	movf	_CycleTime+1,w	;volatile
  1472  007C  3A80               	xorlw	128
  1473  007D  0020               	movlb	0	; select bank0
  1474  007E  00A6               	movwf	??_main
  1475  007F  3080               	movlw	128
  1476  0080  0226               	subwf	??_main,w
  1477  0081  1D03               	skipz
  1478  0082  2885               	goto	u515
  1479  0083  3001               	movlw	1
  1480  0084  0279               	subwf	_CycleTime,w	;volatile
  1481  0085                     u515:	
  1482  0085  1C03               	btfss	3,0
  1483  0086  288B               	goto	l336
  1484                           
  1485                           ;main.c: 119: {
  1486                           ;main.c: 121: do { LATAbits.LATA1 = 1; } while(0);
  1487  0087  0022               	movlb	2	; select bank2
  1488  0088  148C               	bsf	12,1	;volatile
  1489                           
  1490                           ;main.c: 123: do { LATAbits.LATA5 = 1; } while(0);
  1491  0089  168C               	bsf	12,5	;volatile
  1492  008A  287B               	goto	l1135
  1493  008B                     l336:	
  1494                           ;main.c: 124: }
  1495                           ;main.c: 127: do { LATAbits.LATA1 = 0; } while(0);
  1496                           
  1497  008B  0022               	movlb	2	; select bank2
  1498  008C  108C               	bcf	12,1	;volatile
  1499                           
  1500                           ;main.c: 128: do { LATAbits.LATA5 = 0; } while(0);
  1501  008D  128C               	bcf	12,5	;volatile
  1502                           
  1503                           ;main.c: 132: if(ADC_GetConversion(ADC_Input) < 485)
  1504  008E  3002               	movlw	2
  1505  008F  20CA               	fcall	_ADC_GetConversion
  1506  0090  3001               	movlw	1
  1507  0091  0272               	subwf	?_ADC_GetConversion+1,w
  1508  0092  30E5               	movlw	229
  1509  0093  1903               	skipnz
  1510  0094  0271               	subwf	?_ADC_GetConversion,w
  1511  0095  1803               	skipnc
  1512  0096  2899               	goto	l340
  1513                           
  1514                           ;main.c: 133: {
  1515                           ;main.c: 134: do { LATAbits.LATA0 = 1; } while(0);
  1516  0097  0022               	movlb	2	; select bank2
  1517  0098  140C               	bsf	12,0	;volatile
  1518  0099                     l340:	
  1519  0099  0063               	sleep	;# 
  1520  009A                     l343:	
  1521  009A  2830               	ljmp	start
  1522  009B                     __end_of_main:	
  1523                           
  1524                           	psect	text1
  1525  0138                     __ptext1:	
  1526 ;; *************** function _SYSTEM_Initialize *****************
  1527 ;; Defined at:
  1528 ;;		line 66 in file "mcc_generated_files/mcc.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;		None
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;		None
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg, status,2, status,0, pclath, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMMON   BANK0
  1542 ;;      Params:         0       0
  1543 ;;      Locals:         0       0
  1544 ;;      Temps:          0       0
  1545 ;;      Totals:         0       0
  1546 ;;Total ram usage:        0 bytes
  1547 ;; Hardware stack levels used:    1
  1548 ;; Hardware stack levels required when called:    5
  1549 ;; This function calls:
  1550 ;;		_ADC_Initialize
  1551 ;;		_OSCILLATOR_Initialize
  1552 ;;		_PIN_MANAGER_Initialize
  1553 ;;		_TMR0_Initialize
  1554 ;;		_TMR1_Initialize
  1555 ;;		_TMR2_Initialize
  1556 ;;		_WDT_Initialize
  1557 ;; This function is called by:
  1558 ;;		_main
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           
  1563                           ;psect for function _SYSTEM_Initialize
  1564  0138                     _SYSTEM_Initialize:	
  1565                           
  1566                           ;mcc.c: 69: PIN_MANAGER_Initialize();
  1567                           
  1568                           ;incstack = 0
  1569                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1570  0138  2103               	fcall	_PIN_MANAGER_Initialize
  1571                           
  1572                           ;mcc.c: 70: OSCILLATOR_Initialize();
  1573  0139  2156               	fcall	_OSCILLATOR_Initialize
  1574                           
  1575                           ;mcc.c: 71: WDT_Initialize();
  1576  013A  2152               	fcall	_WDT_Initialize
  1577                           
  1578                           ;mcc.c: 72: ADC_Initialize();
  1579  013B  2123               	fcall	_ADC_Initialize
  1580                           
  1581                           ;mcc.c: 73: TMR2_Initialize();
  1582  013C  20F3               	fcall	_TMR2_Initialize
  1583                           
  1584                           ;mcc.c: 74: TMR1_Initialize();
  1585  013D  20B4               	fcall	_TMR1_Initialize
  1586                           
  1587                           ;mcc.c: 75: TMR0_Initialize();
  1588  013E  20DF               	fcall	_TMR0_Initialize
  1589  013F  0008               	return
  1590  0140                     __end_of_SYSTEM_Initialize:	
  1591                           
  1592                           	psect	text2
  1593  0152                     __ptext2:	
  1594 ;; *************** function _WDT_Initialize *****************
  1595 ;; Defined at:
  1596 ;;		line 84 in file "mcc_generated_files/mcc.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;		None
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;		None
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMMON   BANK0
  1610 ;;      Params:         0       0
  1611 ;;      Locals:         0       0
  1612 ;;      Temps:          0       0
  1613 ;;      Totals:         0       0
  1614 ;;Total ram usage:        0 bytes
  1615 ;; Hardware stack levels used:    1
  1616 ;; Hardware stack levels required when called:    3
  1617 ;; This function calls:
  1618 ;;		Nothing
  1619 ;; This function is called by:
  1620 ;;		_SYSTEM_Initialize
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           
  1625                           ;psect for function _WDT_Initialize
  1626  0152                     _WDT_Initialize:	
  1627                           
  1628                           ;mcc.c: 87: WDTCON = 0x16;
  1629                           
  1630                           ;incstack = 0
  1631                           ; Regs used in _WDT_Initialize: [wreg]
  1632  0152  3016               	movlw	22
  1633  0153  0021               	movlb	1	; select bank1
  1634  0154  0097               	movwf	23	;volatile
  1635  0155  0008               	return
  1636  0156                     __end_of_WDT_Initialize:	
  1637                           
  1638                           	psect	text3
  1639  00F3                     __ptext3:	
  1640 ;; *************** function _TMR2_Initialize *****************
  1641 ;; Defined at:
  1642 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;		None
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;		None
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		wreg, status,2, status,0, pclath, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMMON   BANK0
  1656 ;;      Params:         0       0
  1657 ;;      Locals:         0       0
  1658 ;;      Temps:          0       0
  1659 ;;      Totals:         0       0
  1660 ;;Total ram usage:        0 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    4
  1663 ;; This function calls:
  1664 ;;		_TMR2_SetInterruptHandler
  1665 ;;		_TMR2_StartTimer
  1666 ;; This function is called by:
  1667 ;;		_SYSTEM_Initialize
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           
  1672                           ;psect for function _TMR2_Initialize
  1673  00F3                     _TMR2_Initialize:	
  1674                           
  1675                           ;tmr2.c: 69: T2CON = 0x7B;
  1676                           
  1677                           ;incstack = 0
  1678                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1679  00F3  307B               	movlw	123
  1680  00F4  0020               	movlb	0	; select bank0
  1681  00F5  009C               	movwf	28	;volatile
  1682                           
  1683                           ;tmr2.c: 72: PR2 = 0x79;
  1684  00F6  3079               	movlw	121
  1685  00F7  009B               	movwf	27	;volatile
  1686                           
  1687                           ;tmr2.c: 75: TMR2 = 0x00;
  1688  00F8  019A               	clrf	26	;volatile
  1689                           
  1690                           ;tmr2.c: 78: PIR1bits.TMR2IF = 0;
  1691  00F9  1091               	bcf	17,1	;volatile
  1692                           
  1693                           ;tmr2.c: 81: PIE1bits.TMR2IE = 1;
  1694  00FA  0021               	movlb	1	; select bank1
  1695  00FB  1491               	bsf	17,1	;volatile
  1696                           
  1697                           ;tmr2.c: 84: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  1698  00FC  3000               	movlw	0
  1699  00FD  00F1               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  1700  00FE  3000               	movlw	0
  1701  00FF  00F2               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  1702  0100  2140               	fcall	_TMR2_SetInterruptHandler
  1703                           
  1704                           ;tmr2.c: 87: TMR2_StartTimer();
  1705  0101  215D               	fcall	_TMR2_StartTimer
  1706  0102  0008               	return
  1707  0103                     __end_of_TMR2_Initialize:	
  1708                           
  1709                           	psect	text4
  1710  015D                     __ptext4:	
  1711 ;; *************** function _TMR2_StartTimer *****************
  1712 ;; Defined at:
  1713 ;;		line 90 in file "mcc_generated_files/tmr2.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;		None
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;		None
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      void 
  1720 ;; Registers used:
  1721 ;;		None
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMMON   BANK0
  1727 ;;      Params:         0       0
  1728 ;;      Locals:         0       0
  1729 ;;      Temps:          0       0
  1730 ;;      Totals:         0       0
  1731 ;;Total ram usage:        0 bytes
  1732 ;; Hardware stack levels used:    1
  1733 ;; Hardware stack levels required when called:    3
  1734 ;; This function calls:
  1735 ;;		Nothing
  1736 ;; This function is called by:
  1737 ;;		_TMR2_Initialize
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           
  1742                           ;psect for function _TMR2_StartTimer
  1743  015D                     _TMR2_StartTimer:	
  1744                           
  1745                           ;tmr2.c: 93: T2CONbits.TMR2ON = 1;
  1746                           
  1747                           ;incstack = 0
  1748                           ; Regs used in _TMR2_StartTimer: []
  1749  015D  0020               	movlb	0	; select bank0
  1750  015E  151C               	bsf	28,2	;volatile
  1751  015F  0008               	return
  1752  0160                     __end_of_TMR2_StartTimer:	
  1753                           
  1754                           	psect	text5
  1755  0140                     __ptext5:	
  1756 ;; *************** function _TMR2_SetInterruptHandler *****************
  1757 ;; Defined at:
  1758 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
  1761 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;		None
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  1    wreg      void 
  1766 ;; Registers used:
  1767 ;;		wreg
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMMON   BANK0
  1773 ;;      Params:         2       0
  1774 ;;      Locals:         0       0
  1775 ;;      Temps:          0       0
  1776 ;;      Totals:         2       0
  1777 ;;Total ram usage:        2 bytes
  1778 ;; Hardware stack levels used:    1
  1779 ;; Hardware stack levels required when called:    3
  1780 ;; This function calls:
  1781 ;;		Nothing
  1782 ;; This function is called by:
  1783 ;;		_TMR2_Initialize
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786                           
  1787                           
  1788                           ;psect for function _TMR2_SetInterruptHandler
  1789  0140                     _TMR2_SetInterruptHandler:	
  1790                           
  1791                           ;tmr2.c: 138: TMR2_InterruptHandler = InterruptHandler;
  1792                           
  1793                           ;incstack = 0
  1794                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  1795  0140  0872               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  1796  0141  0020               	movlb	0	; select bank0
  1797  0142  00A1               	movwf	_TMR2_InterruptHandler+1
  1798  0143  0871               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  1799  0144  00A0               	movwf	_TMR2_InterruptHandler
  1800  0145  0008               	return
  1801  0146                     __end_of_TMR2_SetInterruptHandler:	
  1802                           
  1803                           	psect	text6
  1804  00B4                     __ptext6:	
  1805 ;; *************** function _TMR1_Initialize *****************
  1806 ;; Defined at:
  1807 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;		None
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;		None
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  1    wreg      void 
  1814 ;; Registers used:
  1815 ;;		wreg, status,2, status,0, pclath, cstack
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMMON   BANK0
  1821 ;;      Params:         0       0
  1822 ;;      Locals:         0       0
  1823 ;;      Temps:          0       0
  1824 ;;      Totals:         0       0
  1825 ;;Total ram usage:        0 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; Hardware stack levels required when called:    4
  1828 ;; This function calls:
  1829 ;;		_TMR1_SetInterruptHandler
  1830 ;;		_TMR1_StartTimer
  1831 ;; This function is called by:
  1832 ;;		_SYSTEM_Initialize
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           
  1837                           ;psect for function _TMR1_Initialize
  1838  00B4                     _TMR1_Initialize:	
  1839                           
  1840                           ;tmr1.c: 68: T1CON = 0x30;
  1841                           
  1842                           ;incstack = 0
  1843                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1844  00B4  3030               	movlw	48
  1845  00B5  0020               	movlb	0	; select bank0
  1846  00B6  0098               	movwf	24	;volatile
  1847                           
  1848                           ;tmr1.c: 71: T1GCON = 0x00;
  1849  00B7  0199               	clrf	25	;volatile
  1850                           
  1851                           ;tmr1.c: 74: TMR1H = 0x0B;
  1852  00B8  300B               	movlw	11
  1853  00B9  0097               	movwf	23	;volatile
  1854                           
  1855                           ;tmr1.c: 77: TMR1L = 0xDC;
  1856  00BA  30DC               	movlw	220
  1857  00BB  0096               	movwf	22	;volatile
  1858                           
  1859                           ;tmr1.c: 80: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1860  00BC  0817               	movf	23,w	;volatile
  1861  00BD  00F6               	movwf	_timer1ReloadVal+1	;volatile
  1862  00BE  0816               	movf	22,w	;volatile
  1863  00BF  00F5               	movwf	_timer1ReloadVal	;volatile
  1864                           
  1865                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
  1866  00C0  1011               	bcf	17,0	;volatile
  1867                           
  1868                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
  1869  00C1  0021               	movlb	1	; select bank1
  1870  00C2  1411               	bsf	17,0	;volatile
  1871                           
  1872                           ;tmr1.c: 89: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  1873  00C3  3066               	movlw	low _TMR1_DefaultInterruptHandler
  1874  00C4  00F1               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1875  00C5  3001               	movlw	high _TMR1_DefaultInterruptHandler
  1876  00C6  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1877  00C7  2146               	fcall	_TMR1_SetInterruptHandler
  1878                           
  1879                           ;tmr1.c: 92: TMR1_StartTimer();
  1880  00C8  2160               	fcall	_TMR1_StartTimer
  1881  00C9  0008               	return
  1882  00CA                     __end_of_TMR1_Initialize:	
  1883                           
  1884                           	psect	text7
  1885  0160                     __ptext7:	
  1886 ;; *************** function _TMR1_StartTimer *****************
  1887 ;; Defined at:
  1888 ;;		line 95 in file "mcc_generated_files/tmr1.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;		None
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;		None
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      void 
  1895 ;; Registers used:
  1896 ;;		None
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMMON   BANK0
  1902 ;;      Params:         0       0
  1903 ;;      Locals:         0       0
  1904 ;;      Temps:          0       0
  1905 ;;      Totals:         0       0
  1906 ;;Total ram usage:        0 bytes
  1907 ;; Hardware stack levels used:    1
  1908 ;; Hardware stack levels required when called:    3
  1909 ;; This function calls:
  1910 ;;		Nothing
  1911 ;; This function is called by:
  1912 ;;		_TMR1_Initialize
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           
  1917                           ;psect for function _TMR1_StartTimer
  1918  0160                     _TMR1_StartTimer:	
  1919                           
  1920                           ;tmr1.c: 98: T1CONbits.TMR1ON = 1;
  1921                           
  1922                           ;incstack = 0
  1923                           ; Regs used in _TMR1_StartTimer: []
  1924  0160  0020               	movlb	0	; select bank0
  1925  0161  1418               	bsf	24,0	;volatile
  1926  0162  0008               	return
  1927  0163                     __end_of_TMR1_StartTimer:	
  1928                           
  1929                           	psect	text8
  1930  0146                     __ptext8:	
  1931 ;; *************** function _TMR1_SetInterruptHandler *****************
  1932 ;; Defined at:
  1933 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
  1936 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;		None
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      void 
  1941 ;; Registers used:
  1942 ;;		wreg
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMMON   BANK0
  1948 ;;      Params:         2       0
  1949 ;;      Locals:         0       0
  1950 ;;      Temps:          0       0
  1951 ;;      Totals:         2       0
  1952 ;;Total ram usage:        2 bytes
  1953 ;; Hardware stack levels used:    1
  1954 ;; Hardware stack levels required when called:    3
  1955 ;; This function calls:
  1956 ;;		Nothing
  1957 ;; This function is called by:
  1958 ;;		_TMR1_Initialize
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           
  1963                           ;psect for function _TMR1_SetInterruptHandler
  1964  0146                     _TMR1_SetInterruptHandler:	
  1965                           
  1966                           ;tmr1.c: 177: TMR1_InterruptHandler = InterruptHandler;
  1967                           
  1968                           ;incstack = 0
  1969                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  1970  0146  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  1971  0147  0020               	movlb	0	; select bank0
  1972  0148  00A5               	movwf	_TMR1_InterruptHandler+1
  1973  0149  0871               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  1974  014A  00A4               	movwf	_TMR1_InterruptHandler
  1975  014B  0008               	return
  1976  014C                     __end_of_TMR1_SetInterruptHandler:	
  1977                           
  1978                           	psect	text9
  1979  00DF                     __ptext9:	
  1980 ;; *************** function _TMR0_Initialize *****************
  1981 ;; Defined at:
  1982 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;		None
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;		None
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  1    wreg      void 
  1989 ;; Registers used:
  1990 ;;		wreg, status,2, status,0, pclath, cstack
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMMON   BANK0
  1996 ;;      Params:         0       0
  1997 ;;      Locals:         0       0
  1998 ;;      Temps:          1       0
  1999 ;;      Totals:         1       0
  2000 ;;Total ram usage:        1 bytes
  2001 ;; Hardware stack levels used:    1
  2002 ;; Hardware stack levels required when called:    4
  2003 ;; This function calls:
  2004 ;;		_TMR0_SetInterruptHandler
  2005 ;; This function is called by:
  2006 ;;		_SYSTEM_Initialize
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           
  2011                           ;psect for function _TMR0_Initialize
  2012  00DF                     _TMR0_Initialize:	
  2013                           
  2014                           ;tmr0.c: 70: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | 0xD7 & 0x3F);
  2015                           
  2016                           ;incstack = 0
  2017                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2018  00DF  0021               	movlb	1	; select bank1
  2019  00E0  0815               	movf	21,w	;volatile
  2020  00E1  39C0               	andlw	192
  2021  00E2  3817               	iorlw	23
  2022  00E3  0095               	movwf	21	;volatile
  2023                           
  2024                           ;tmr0.c: 73: TMR0 = 0x86;
  2025  00E4  3086               	movlw	134
  2026  00E5  0020               	movlb	0	; select bank0
  2027  00E6  0095               	movwf	21	;volatile
  2028                           
  2029                           ;tmr0.c: 76: timer0ReloadVal= 134;
  2030  00E7  3086               	movlw	134
  2031  00E8  00F3               	movwf	??_TMR0_Initialize
  2032  00E9  0873               	movf	??_TMR0_Initialize,w
  2033  00EA  00F7               	movwf	_timer0ReloadVal	;volatile
  2034                           
  2035                           ;tmr0.c: 79: INTCONbits.TMR0IF = 0;
  2036  00EB  110B               	bcf	11,2	;volatile
  2037                           
  2038                           ;tmr0.c: 82: INTCONbits.TMR0IE = 1;
  2039  00EC  168B               	bsf	11,5	;volatile
  2040                           
  2041                           ;tmr0.c: 85: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  2042  00ED  3000               	movlw	0
  2043  00EE  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2044  00EF  3000               	movlw	0
  2045  00F0  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2046  00F1  214C               	fcall	_TMR0_SetInterruptHandler
  2047  00F2  0008               	return
  2048  00F3                     __end_of_TMR0_Initialize:	
  2049                           
  2050                           	psect	text10
  2051  014C                     __ptext10:	
  2052 ;; *************** function _TMR0_SetInterruptHandler *****************
  2053 ;; Defined at:
  2054 ;;		line 133 in file "mcc_generated_files/tmr0.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
  2057 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;		None
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  1    wreg      void 
  2062 ;; Registers used:
  2063 ;;		wreg
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMMON   BANK0
  2069 ;;      Params:         2       0
  2070 ;;      Locals:         0       0
  2071 ;;      Temps:          0       0
  2072 ;;      Totals:         2       0
  2073 ;;Total ram usage:        2 bytes
  2074 ;; Hardware stack levels used:    1
  2075 ;; Hardware stack levels required when called:    3
  2076 ;; This function calls:
  2077 ;;		Nothing
  2078 ;; This function is called by:
  2079 ;;		_TMR0_Initialize
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           
  2084                           ;psect for function _TMR0_SetInterruptHandler
  2085  014C                     _TMR0_SetInterruptHandler:	
  2086                           
  2087                           ;tmr0.c: 134: TMR0_InterruptHandler = InterruptHandler;
  2088                           
  2089                           ;incstack = 0
  2090                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2091  014C  0872               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2092  014D  0020               	movlb	0	; select bank0
  2093  014E  00A3               	movwf	_TMR0_InterruptHandler+1
  2094  014F  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2095  0150  00A2               	movwf	_TMR0_InterruptHandler
  2096  0151  0008               	return
  2097  0152                     __end_of_TMR0_SetInterruptHandler:	
  2098                           
  2099                           	psect	text11
  2100  0103                     __ptext11:	
  2101 ;; *************** function _PIN_MANAGER_Initialize *****************
  2102 ;; Defined at:
  2103 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;		None
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMMON   BANK0
  2117 ;;      Params:         0       0
  2118 ;;      Locals:         0       0
  2119 ;;      Temps:          0       0
  2120 ;;      Totals:         0       0
  2121 ;;Total ram usage:        0 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:    3
  2124 ;; This function calls:
  2125 ;;		Nothing
  2126 ;; This function is called by:
  2127 ;;		_SYSTEM_Initialize
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           
  2132                           ;psect for function _PIN_MANAGER_Initialize
  2133  0103                     _PIN_MANAGER_Initialize:	
  2134                           
  2135                           ;pin_manager.c: 57: LATA = 0x00;
  2136                           
  2137                           ;incstack = 0
  2138                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2139  0103  0022               	movlb	2	; select bank2
  2140  0104  018C               	clrf	12	;volatile
  2141                           
  2142                           ;pin_manager.c: 62: TRISA = 0x1C;
  2143  0105  301C               	movlw	28
  2144  0106  0021               	movlb	1	; select bank1
  2145  0107  008C               	movwf	12	;volatile
  2146                           
  2147                           ;pin_manager.c: 67: ANSELA = 0x14;
  2148  0108  3014               	movlw	20
  2149  0109  0023               	movlb	3	; select bank3
  2150  010A  008C               	movwf	12	;volatile
  2151                           
  2152                           ;pin_manager.c: 72: WPUA = 0x10;
  2153  010B  3010               	movlw	16
  2154  010C  0024               	movlb	4	; select bank4
  2155  010D  008C               	movwf	12	;volatile
  2156                           
  2157                           ;pin_manager.c: 73: OPTION_REGbits.nWPUEN = 0;
  2158  010E  0021               	movlb	1	; select bank1
  2159  010F  1395               	bcf	21,7	;volatile
  2160                           
  2161                           ;pin_manager.c: 79: APFCON = 0x00;
  2162  0110  0022               	movlb	2	; select bank2
  2163  0111  019D               	clrf	29	;volatile
  2164  0112  0008               	return
  2165  0113                     __end_of_PIN_MANAGER_Initialize:	
  2166                           
  2167                           	psect	text12
  2168  0156                     __ptext12:	
  2169 ;; *************** function _OSCILLATOR_Initialize *****************
  2170 ;; Defined at:
  2171 ;;		line 78 in file "mcc_generated_files/mcc.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;		None
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;		None
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMMON   BANK0
  2185 ;;      Params:         0       0
  2186 ;;      Locals:         0       0
  2187 ;;      Temps:          0       0
  2188 ;;      Totals:         0       0
  2189 ;;Total ram usage:        0 bytes
  2190 ;; Hardware stack levels used:    1
  2191 ;; Hardware stack levels required when called:    3
  2192 ;; This function calls:
  2193 ;;		Nothing
  2194 ;; This function is called by:
  2195 ;;		_SYSTEM_Initialize
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           
  2200                           ;psect for function _OSCILLATOR_Initialize
  2201  0156                     _OSCILLATOR_Initialize:	
  2202                           
  2203                           ;mcc.c: 81: OSCCON = 0x38;
  2204                           
  2205                           ;incstack = 0
  2206                           ; Regs used in _OSCILLATOR_Initialize: [wreg]
  2207  0156  3038               	movlw	56
  2208  0157  0021               	movlb	1	; select bank1
  2209  0158  0099               	movwf	25	;volatile
  2210  0159  0008               	return
  2211  015A                     __end_of_OSCILLATOR_Initialize:	
  2212                           
  2213                           	psect	text13
  2214  0123                     __ptext13:	
  2215 ;; *************** function _ADC_Initialize *****************
  2216 ;; Defined at:
  2217 ;;		line 64 in file "mcc_generated_files/adc.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;		None
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;		None
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg, status,2
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMMON   BANK0
  2231 ;;      Params:         0       0
  2232 ;;      Locals:         0       0
  2233 ;;      Temps:          0       0
  2234 ;;      Totals:         0       0
  2235 ;;Total ram usage:        0 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:    3
  2238 ;; This function calls:
  2239 ;;		Nothing
  2240 ;; This function is called by:
  2241 ;;		_SYSTEM_Initialize
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           
  2246                           ;psect for function _ADC_Initialize
  2247  0123                     _ADC_Initialize:	
  2248                           
  2249                           ;adc.c: 69: ADCON0 = 0x01;
  2250                           
  2251                           ;incstack = 0
  2252                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  2253  0123  3001               	movlw	1
  2254  0124  0021               	movlb	1	; select bank1
  2255  0125  009D               	movwf	29	;volatile
  2256                           
  2257                           ;adc.c: 72: ADCON1 = 0xE0;
  2258  0126  30E0               	movlw	224
  2259  0127  009E               	movwf	30	;volatile
  2260                           
  2261                           ;adc.c: 75: ADCON2 = 0x40;
  2262  0128  3040               	movlw	64
  2263  0129  009F               	movwf	31	;volatile
  2264                           
  2265                           ;adc.c: 78: ADRESL = 0x00;
  2266  012A  019B               	clrf	27	;volatile
  2267                           
  2268                           ;adc.c: 81: ADRESH = 0x00;
  2269  012B  019C               	clrf	28	;volatile
  2270                           
  2271                           ;adc.c: 84: PIE1bits.ADIE = 1;
  2272  012C  1711               	bsf	17,6	;volatile
  2273  012D  0008               	return
  2274  012E                     __end_of_ADC_Initialize:	
  2275                           
  2276                           	psect	text14
  2277  00CA                     __ptext14:	
  2278 ;; *************** function _ADC_GetConversion *****************
  2279 ;; Defined at:
  2280 ;;		line 114 in file "mcc_generated_files/adc.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;  channel         1    wreg     enum E2508
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;  channel         1    4[COMMON] enum E2508
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  2    1[COMMON] unsigned int 
  2287 ;; Registers used:
  2288 ;;		wreg, status,2, status,0
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMMON   BANK0
  2294 ;;      Params:         2       0
  2295 ;;      Locals:         1       0
  2296 ;;      Temps:          1       0
  2297 ;;      Totals:         4       0
  2298 ;;Total ram usage:        4 bytes
  2299 ;; Hardware stack levels used:    1
  2300 ;; Hardware stack levels required when called:    3
  2301 ;; This function calls:
  2302 ;;		Nothing
  2303 ;; This function is called by:
  2304 ;;		_main
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           
  2309                           ;psect for function _ADC_GetConversion
  2310  00CA                     _ADC_GetConversion:	
  2311                           
  2312                           ;incstack = 0
  2313                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  2314                           ;ADC_GetConversion@channel stored from wreg
  2315  00CA  00F4               	movwf	ADC_GetConversion@channel
  2316                           
  2317                           ;adc.c: 117: ADCON0bits.CHS = channel;
  2318  00CB  0874               	movf	ADC_GetConversion@channel,w
  2319  00CC  00F3               	movwf	??_ADC_GetConversion
  2320  00CD  0DF3               	rlf	??_ADC_GetConversion,f
  2321  00CE  0DF3               	rlf	??_ADC_GetConversion,f
  2322  00CF  0021               	movlb	1	; select bank1
  2323  00D0  081D               	movf	29,w	;volatile
  2324  00D1  0673               	xorwf	??_ADC_GetConversion,w
  2325  00D2  3983               	andlw	-125
  2326  00D3  0673               	xorwf	??_ADC_GetConversion,w
  2327  00D4  009D               	movwf	29	;volatile
  2328                           
  2329                           ;adc.c: 120: ADCON0bits.ADON = 1;
  2330  00D5  141D               	bsf	29,0	;volatile
  2331                           
  2332                           ;adc.c: 125: ADCON0bits.GO_nDONE = 1;
  2333                           
  2334                           ;adc.c: 122: _delay((unsigned long)((5)*(500000/4000000.0)));
  2335  00D6  0021               	movlb	1	; select bank1
  2336  00D7  149D               	bsf	29,1	;volatile
  2337  00D8                     l54:	
  2338                           ;adc.c: 129: {
  2339                           
  2340                           ;adc.c: 128: while (ADCON0bits.GO_nDONE)
  2341                           
  2342  00D8  189D               	btfsc	29,1	;volatile
  2343  00D9  28D8               	goto	l54
  2344                           
  2345                           ;adc.c: 130: }
  2346                           ;adc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  2347  00DA  081C               	movf	28,w	;volatile
  2348  00DB  00F2               	movwf	?_ADC_GetConversion+1
  2349  00DC  081B               	movf	27,w	;volatile
  2350  00DD  00F1               	movwf	?_ADC_GetConversion
  2351  00DE  0008               	return
  2352  00DF                     __end_of_ADC_GetConversion:	
  2353                           
  2354                           	psect	intentry
  2355  0004                     __pintentry:	
  2356 ;; *************** function _INTERRUPT_InterruptManager *****************
  2357 ;; Defined at:
  2358 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;		None
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;		None
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  1    wreg      void 
  2365 ;; Registers used:
  2366 ;;		wreg, status,2, status,0, pclath, cstack
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMMON   BANK0
  2372 ;;      Params:         0       0
  2373 ;;      Locals:         0       0
  2374 ;;      Temps:          1       0
  2375 ;;      Totals:         1       0
  2376 ;;Total ram usage:        1 bytes
  2377 ;; Hardware stack levels used:    1
  2378 ;; Hardware stack levels required when called:    2
  2379 ;; This function calls:
  2380 ;;		_ADC_ISR
  2381 ;;		_TMR0_ISR
  2382 ;;		_TMR1_ISR
  2383 ;;		_TMR2_ISR
  2384 ;; This function is called by:
  2385 ;;		Interrupt level 1
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389  0004                     _INTERRUPT_InterruptManager:	
  2390                           
  2391                           ;incstack = 0
  2392  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2393                           
  2394                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  2395  0005  3180               	pagesel	$
  2396  0006  0020               	movlb	0	; select bank0
  2397  0007  087F               	movf	127,w
  2398  0008  00F0               	movwf	??_INTERRUPT_InterruptManager
  2399                           
  2400                           ;interrupt_manager.c: 54: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  2401  0009  1A8B               	btfsc	11,5	;volatile
  2402  000A  1D0B               	btfss	11,2	;volatile
  2403  000B  280E               	goto	i1l79
  2404                           
  2405                           ;interrupt_manager.c: 55: {
  2406                           ;interrupt_manager.c: 56: TMR0_ISR();
  2407  000C  209B               	fcall	_TMR0_ISR
  2408                           
  2409                           ;interrupt_manager.c: 57: }
  2410  000D  282B               	goto	i1l87
  2411  000E                     i1l79:	
  2412                           
  2413                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits
      +                          .ADIF == 1)
  2414  000E  1F0B               	btfss	11,6	;volatile
  2415  000F  2818               	goto	i1l81
  2416  0010  0021               	movlb	1	; select bank1
  2417  0011  1F11               	btfss	17,6	;volatile
  2418  0012  2818               	goto	i1l81
  2419  0013  0020               	movlb	0	; select bank0
  2420  0014  1F11               	btfss	17,6	;volatile
  2421  0015  2818               	goto	i1l81
  2422                           
  2423                           ;interrupt_manager.c: 59: {
  2424                           ;interrupt_manager.c: 60: ADC_ISR();
  2425  0016  2163               	fcall	_ADC_ISR
  2426                           
  2427                           ;interrupt_manager.c: 61: }
  2428  0017  282B               	goto	i1l87
  2429  0018                     i1l81:	
  2430                           
  2431                           ;interrupt_manager.c: 62: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  2432  0018  1F0B               	btfss	11,6	;volatile
  2433  0019  2822               	goto	i1l83
  2434  001A  0021               	movlb	1	; select bank1
  2435  001B  1C91               	btfss	17,1	;volatile
  2436  001C  2822               	goto	i1l83
  2437  001D  0020               	movlb	0	; select bank0
  2438  001E  1C91               	btfss	17,1	;volatile
  2439  001F  2822               	goto	i1l83
  2440                           
  2441                           ;interrupt_manager.c: 63: {
  2442                           ;interrupt_manager.c: 64: TMR2_ISR();
  2443  0020  212E               	fcall	_TMR2_ISR
  2444                           
  2445                           ;interrupt_manager.c: 65: }
  2446  0021  282B               	goto	i1l87
  2447  0022                     i1l83:	
  2448                           
  2449                           ;interrupt_manager.c: 66: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
  2450  0022  1F0B               	btfss	11,6	;volatile
  2451  0023  282B               	goto	i1l87
  2452  0024  0021               	movlb	1	; select bank1
  2453  0025  1C11               	btfss	17,0	;volatile
  2454  0026  282B               	goto	i1l87
  2455  0027  0020               	movlb	0	; select bank0
  2456  0028  1C11               	btfss	17,0	;volatile
  2457  0029  282B               	goto	i1l87
  2458                           
  2459                           ;interrupt_manager.c: 67: {
  2460                           ;interrupt_manager.c: 68: TMR1_ISR();
  2461  002A  2113               	fcall	_TMR1_ISR
  2462  002B                     i1l87:	
  2463                           ;interrupt_manager.c: 70: else
  2464                           ;interrupt_manager.c: 71: {
  2465                           
  2466                           ;interrupt_manager.c: 69: }
  2467                           
  2468  002B  0870               	movf	??_INTERRUPT_InterruptManager,w
  2469  002C  0020               	movlb	0	; select bank0
  2470  002D  00FF               	movwf	127
  2471  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2472  002F  0009               	retfie
  2473  0030                     __end_of_INTERRUPT_InterruptManager:	
  2474                           
  2475                           	psect	text16
  2476  012E                     __ptext16:	
  2477 ;; *************** function _TMR2_ISR *****************
  2478 ;; Defined at:
  2479 ;;		line 122 in file "mcc_generated_files/tmr2.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;		None
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;		None
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      void 
  2486 ;; Registers used:
  2487 ;;		wreg, status,2, status,0
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMMON   BANK0
  2493 ;;      Params:         0       0
  2494 ;;      Locals:         0       0
  2495 ;;      Temps:          0       0
  2496 ;;      Totals:         0       0
  2497 ;;Total ram usage:        0 bytes
  2498 ;; Hardware stack levels used:    1
  2499 ;; This function calls:
  2500 ;;		Nothing
  2501 ;; This function is called by:
  2502 ;;		_INTERRUPT_InterruptManager
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           
  2507                           ;psect for function _TMR2_ISR
  2508  012E                     _TMR2_ISR:	
  2509                           
  2510                           ;tmr2.c: 126: PIR1bits.TMR2IF = 0;
  2511                           
  2512                           ;incstack = 0
  2513                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0]
  2514  012E  0020               	movlb	0	; select bank0
  2515  012F  1091               	bcf	17,1	;volatile
  2516                           
  2517                           ;tmr2.c: 130: if(RunCycle == 1)
  2518  0130  037C               	decf	_RunCycle,w
  2519  0131  1D03               	btfss	3,2
  2520  0132  0008               	return
  2521                           
  2522                           ;tmr2.c: 131: {
  2523                           ;tmr2.c: 132: CycleTime--;
  2524  0133  30FF               	movlw	255
  2525  0134  07F9               	addwf	_CycleTime,f	;volatile
  2526  0135  30FF               	movlw	255
  2527  0136  3DFA               	addwfc	_CycleTime+1,f	;volatile
  2528  0137  0008               	return
  2529  0138                     __end_of_TMR2_ISR:	
  2530                           
  2531                           	psect	text17
  2532  0113                     __ptext17:	
  2533 ;; *************** function _TMR1_ISR *****************
  2534 ;; Defined at:
  2535 ;;		line 160 in file "mcc_generated_files/tmr1.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;		None
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;		None
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      void 
  2542 ;; Registers used:
  2543 ;;		wreg, status,2, status,0, pclath, cstack
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMMON   BANK0
  2549 ;;      Params:         0       0
  2550 ;;      Locals:         0       0
  2551 ;;      Temps:          0       0
  2552 ;;      Totals:         0       0
  2553 ;;Total ram usage:        0 bytes
  2554 ;; Hardware stack levels used:    1
  2555 ;; Hardware stack levels required when called:    1
  2556 ;; This function calls:
  2557 ;;		Absolute function
  2558 ;;		_TMR1_DefaultInterruptHandler
  2559 ;; This function is called by:
  2560 ;;		_INTERRUPT_InterruptManager
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           
  2565                           ;psect for function _TMR1_ISR
  2566  0113                     _TMR1_ISR:	
  2567                           
  2568                           ;tmr1.c: 164: PIR1bits.TMR1IF = 0;
  2569                           
  2570                           ;incstack = 0
  2571                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  2572  0113  0020               	movlb	0	; select bank0
  2573  0114  1011               	bcf	17,0	;volatile
  2574                           
  2575                           ;tmr1.c: 166: TMR1H = (timer1ReloadVal >> 8);
  2576  0115  0876               	movf	_timer1ReloadVal+1,w	;volatile
  2577  0116  0097               	movwf	23	;volatile
  2578                           
  2579                           ;tmr1.c: 167: TMR1L = timer1ReloadVal;
  2580  0117  0875               	movf	_timer1ReloadVal,w	;volatile
  2581  0118  0096               	movwf	22	;volatile
  2582                           
  2583                           ;tmr1.c: 169: if(TMR1_InterruptHandler)
  2584  0119  0824               	movf	_TMR1_InterruptHandler,w
  2585  011A  0425               	iorwf	_TMR1_InterruptHandler+1,w
  2586  011B  1903               	btfsc	3,2
  2587  011C  0008               	return
  2588                           
  2589                           ;tmr1.c: 170: {
  2590                           ;tmr1.c: 171: TMR1_InterruptHandler();
  2591  011D  0825               	movf	_TMR1_InterruptHandler+1,w
  2592  011E  008A               	movwf	10
  2593  011F  0824               	movf	_TMR1_InterruptHandler,w
  2594  0120  000A               	callw
  2595  0121  3181               	pagesel	$
  2596  0122  0008               	return
  2597  0123                     __end_of_TMR1_ISR:	
  2598                           
  2599                           	psect	text18
  2600  0166                     __ptext18:	
  2601 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2602 ;; Defined at:
  2603 ;;		line 180 in file "mcc_generated_files/tmr1.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;		None
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;		None
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      void 
  2610 ;; Registers used:
  2611 ;;		None
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMMON   BANK0
  2617 ;;      Params:         0       0
  2618 ;;      Locals:         0       0
  2619 ;;      Temps:          0       0
  2620 ;;      Totals:         0       0
  2621 ;;Total ram usage:        0 bytes
  2622 ;; Hardware stack levels used:    1
  2623 ;; This function calls:
  2624 ;;		Nothing
  2625 ;; This function is called by:
  2626 ;;		_TMR1_Initialize
  2627 ;;		_TMR1_ISR
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           
  2632                           ;psect for function _TMR1_DefaultInterruptHandler
  2633  0166                     _TMR1_DefaultInterruptHandler:	
  2634                           
  2635                           ;incstack = 0
  2636                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  2637  0166  0008               	return
  2638  0167                     __end_of_TMR1_DefaultInterruptHandler:	
  2639                           
  2640                           	psect	text19
  2641  009B                     __ptext19:	
  2642 ;; *************** function _TMR0_ISR *****************
  2643 ;; Defined at:
  2644 ;;		line 110 in file "mcc_generated_files/tmr0.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;		None
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;		None
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1    wreg      void 
  2651 ;; Registers used:
  2652 ;;		wreg, status,2, status,0
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMMON   BANK0
  2658 ;;      Params:         0       0
  2659 ;;      Locals:         0       0
  2660 ;;      Temps:          0       0
  2661 ;;      Totals:         0       0
  2662 ;;Total ram usage:        0 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; This function calls:
  2665 ;;		Nothing
  2666 ;; This function is called by:
  2667 ;;		_INTERRUPT_InterruptManager
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           
  2672                           ;psect for function _TMR0_ISR
  2673  009B                     _TMR0_ISR:	
  2674                           
  2675                           ;tmr0.c: 114: INTCONbits.TMR0IF = 0;
  2676                           
  2677                           ;incstack = 0
  2678                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0]
  2679  009B  110B               	bcf	11,2	;volatile
  2680                           
  2681                           ;tmr0.c: 116: TMR0 = timer0ReloadVal;
  2682  009C  0877               	movf	_timer0ReloadVal,w	;volatile
  2683  009D  0020               	movlb	0	; select bank0
  2684  009E  0095               	movwf	21	;volatile
  2685                           
  2686                           ;tmr0.c: 120: if(StartupCounter == 0)
  2687  009F  087B               	movf	_StartupCounter,w	;volatile
  2688  00A0  1D03               	btfss	3,2
  2689  00A1  28A6               	goto	i1l827
  2690                           
  2691                           ;tmr0.c: 121: {
  2692                           ;tmr0.c: 122: StartupCounter = 0;
  2693  00A2  01FB               	clrf	_StartupCounter	;volatile
  2694                           
  2695                           ;tmr0.c: 123: do { LATAbits.LATA1 = 0; } while(0);
  2696  00A3  0022               	movlb	2	; select bank2
  2697  00A4  108C               	bcf	12,1	;volatile
  2698                           
  2699                           ;tmr0.c: 124: }
  2700  00A5  0008               	return
  2701  00A6                     i1l827:	
  2702                           
  2703                           ;tmr0.c: 125: else
  2704                           ;tmr0.c: 126: {
  2705                           ;tmr0.c: 127: StartupCounter--;
  2706  00A6  3001               	movlw	1
  2707  00A7  02FB               	subwf	_StartupCounter,f	;volatile
  2708                           
  2709                           ;tmr0.c: 128: do { LATAbits.LATA1 = ~LATAbits.LATA1; } while(0);
  2710  00A8  1003               	clrc
  2711  00A9  0022               	movlb	2	; select bank2
  2712  00AA  1C8C               	btfss	12,1	;volatile
  2713  00AB  1403               	setc
  2714  00AC  1C03               	btfss	3,0
  2715  00AD  28B1               	goto	u3_20
  2716  00AE  0022               	movlb	2	; select bank2
  2717  00AF  148C               	bsf	12,1	;volatile
  2718  00B0  0008               	return
  2719  00B1                     u3_20:	
  2720  00B1  0022               	movlb	2	; select bank2
  2721  00B2  108C               	bcf	12,1	;volatile
  2722  00B3  0008               	return
  2723  00B4                     __end_of_TMR0_ISR:	
  2724                           
  2725                           	psect	text20
  2726  0163                     __ptext20:	
  2727 ;; *************** function _ADC_ISR *****************
  2728 ;; Defined at:
  2729 ;;		line 137 in file "mcc_generated_files/adc.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		None
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMMON   BANK0
  2743 ;;      Params:         0       0
  2744 ;;      Locals:         0       0
  2745 ;;      Temps:          0       0
  2746 ;;      Totals:         0       0
  2747 ;;Total ram usage:        0 bytes
  2748 ;; Hardware stack levels used:    1
  2749 ;; This function calls:
  2750 ;;		Nothing
  2751 ;; This function is called by:
  2752 ;;		_INTERRUPT_InterruptManager
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           
  2757                           ;psect for function _ADC_ISR
  2758  0163                     _ADC_ISR:	
  2759                           
  2760                           ;adc.c: 140: PIR1bits.ADIF = 0;
  2761                           
  2762                           ;incstack = 0
  2763                           ; Regs used in _ADC_ISR: []
  2764  0163  0020               	movlb	0	; select bank0
  2765  0164  1311               	bcf	17,6	;volatile
  2766  0165  0008               	return
  2767  0166                     __end_of_ADC_ISR:	
  2768  007E                     btemp	set	126	;btemp
  2769  007E                     int$flags	set	126
  2770  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         1
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      13
    BANK0            48      1       7

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_ADC_GetConversion
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     280
                                              0 BANK0      1     1      0
                  _ADC_GetConversion
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     258
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      86
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      86
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0      86
                                              3 COMMON     1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      86
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0       0
                                              0 COMMON     1     1      0
                            _ADC_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _TMR0_ISR
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
   _TMR2_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              30      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            30      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               30      1       7       5       14.6%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0      14       6        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
DATA                 0      0      14       7        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Fri Feb 02 19:28:02 2018

        __end_of_TMR2_SetInterruptHandler 0146                               __CFG_CP$OFF 0000  
                                      l54 00D8                           _timer0ReloadVal 0077  
                                     l322 0064                                       l340 0099  
                                     l343 009A                                       l336 008B  
                                     _PR2 001B                                       u515 0085  
                                     u537 0050                                       u547 0070  
                         _timer1ReloadVal 0075                           __end_of_ADC_ISR 0166  
                         _TMR2_Initialize 00F3                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_LVP$OFF 0000  
                                    l1121 0056                                      l1123 0063  
                                    l1135 007B                                      l1119 0047  
                                    l1129 006C                                      _LATA 010C  
                                    i1l81 0018                                      i1l83 0022  
                                    i1l87 002B                                      i1l79 000E  
                                    _TMR0 0015                                      _TMR2 001A  
                                    _WPUA 020C                                      u3_20 00B1  
                            __CFG_WRT$OFF 0000                                      _main 003B  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
                                    start 0030                ??_TMR1_SetInterruptHandler 0073  
                 __end_of_TMR0_Initialize 00F3            __size_of_OSCILLATOR_Initialize 0004  
           __end_of_OSCILLATOR_Initialize 015A                                     ?_main 0070  
                           __CFG_WDTE$OFF 0000                           _TMR1_StartTimer 0160  
                                   _T1CON 0018                                     _T2CON 001C  
                                   i1l827 00A6                                     _TMR1H 0017  
                                   _TMR1L 0016                                     _TRISA 008C  
       __size_of_TMR0_SetInterruptHandler 0006                 ?_TMR0_SetInterruptHandler 0071  
                        __end_of_TMR0_ISR 00B4                          __end_of_TMR1_ISR 0123  
                        __end_of_TMR2_ISR 0138                            _WDT_Initialize 0152  
                 __end_of_TMR1_Initialize 00CA                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         _TMR2_StartTimer 015D                            __CFG_MCLRE$OFF 0000  
                         __initialization 0031                              __end_of_main 009B  
                 __end_of_TMR2_Initialize 0103                                 ??_ADC_ISR 0070  
                          __CFG_LPBOR$OFF 0000               ?_INTERRUPT_InterruptManager 0070  
                _TMR2_SetInterruptHandler 0140                                    ??_main 0026  
                  __end_of_WDT_Initialize 0156                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _ADCON2 009F  
                                  _ADRESH 009C                                    _ADRESL 009B  
                                  _APFCON 011D                                    _ANSELA 018C  
                                  _T1GCON 0019                                    _OSCCON 0099  
                                  _WDTCON 0097                            __CFG_PWRTE$OFF 0000  
    __end_of_TMR1_DefaultInterruptHandler 0167     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0166                   __end_of_TMR1_StartTimer 0163  
                          __CFG_STVREN$ON 0000                          ?_TMR0_Initialize 0070  
                            __pdataCOMMON 0079                           ?_WDT_Initialize 0070  
                ADC_GetConversion@channel 0074                   __end_of_TMR2_StartTimer 0160  
TMR2_SetInterruptHandler@InterruptHandler 0071  TMR0_SetInterruptHandler@InterruptHandler 0071  
TMR1_SetInterruptHandler@InterruptHandler 0071                          ?_TMR1_Initialize 0070  
                       _SYSTEM_Initialize 0138                   __end_of__initialization 0038  
                      ?_SYSTEM_Initialize 0070                            __pcstackCOMMON 0070  
                     ??_SYSTEM_Initialize 0074                                 ?_TMR0_ISR 0070  
                               ?_TMR1_ISR 0070                                 ?_TMR2_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                          ?_TMR2_Initialize 0070  
                          _OPTION_REGbits 0095                 __end_of_SYSTEM_Initialize 0140  
                              __pnvCOMMON 0075                                __pmaintext 003B  
        __end_of_TMR0_SetInterruptHandler 0152                          ?_TMR1_StartTimer 0070  
                              ??_TMR0_ISR 0070                                ??_TMR1_ISR 0070  
                              ??_TMR2_ISR 0070                                __pintentry 0004  
                                 _ADC_ISR 0163                   __size_of_ADC_Initialize 000B  
                        ?_TMR2_StartTimer 0070                                   _Counter 0078  
              ??_TMR2_SetInterruptHandler 0073                                   __ptext1 0138  
                                 __ptext2 0152                                   __ptext3 00F3  
                                 __ptext4 015D                                   __ptext5 0140  
                                 __ptext6 00B4                                   __ptext7 0160  
                                 __ptext8 0146                                   __ptext9 00DF  
          ??_TMR1_DefaultInterruptHandler 0070                                 _T1CONbits 0018  
                   _OSCILLATOR_Initialize 0156                                 _T2CONbits 001C  
       __size_of_TMR1_SetInterruptHandler 0006                  ??_PIN_MANAGER_Initialize 0071  
               ?_TMR1_SetInterruptHandler 0071                __size_of_SYSTEM_Initialize 0008  
                    end_of_initialization 0038                          ??_WDT_Initialize 0071  
                _TMR0_SetInterruptHandler 014C                                 _PORTAbits 000C  
                        __CFG_FOSC$INTOSC 0000              _TMR2_DefaultInterruptHandler 0000  
                           __pidataCOMMON 015A                         __size_of_TMR0_ISR 0019  
                       __size_of_TMR1_ISR 0010                         __size_of_TMR2_ISR 000A  
                          _ADC_Initialize 0123                    ?_OSCILLATOR_Initialize 0070  
                               _CycleTime 0079                       start_initialization 0031  
                __size_of_TMR0_Initialize 0014           __size_of_PIN_MANAGER_Initialize 0010  
                __size_of_TMR1_Initialize 0016                    __end_of_ADC_Initialize 012E  
                                ?_ADC_ISR 0070                               __pbssCOMMON 007C  
                               ___latbits 0000                             __pcstackBANK0 0026  
                __size_of_TMR2_Initialize 0010                     _TMR0_InterruptHandler 0022  
                               __pnvBANK0 0020                    _PIN_MANAGER_Initialize 0103  
        __end_of_TMR1_SetInterruptHandler 014C                           ?_ADC_Initialize 0070  
            ??_INTERRUPT_InterruptManager 0070                  __size_of_TMR1_StartTimer 0003  
                       ??_TMR0_Initialize 0073                                  _LATAbits 010C  
                                _PIE1bits 0091                  __size_of_TMR2_StartTimer 0003  
     __size_of_INTERRUPT_InterruptManager 002C                ??_TMR0_SetInterruptHandler 0073  
                                _PIR1bits 0011                                  _TMR0_ISR 009B  
                                _TMR1_ISR 0113                                  _TMR2_ISR 012E  
                       ??_TMR1_Initialize 0073                          __size_of_ADC_ISR 0003  
                              _ADCON0bits 009D         __size_of_TMR2_SetInterruptHandler 0006  
               ?_TMR2_SetInterruptHandler 0071                         ??_TMR2_Initialize 0073  
                       _ADC_GetConversion 00CA                                  _RunCycle 007C  
                 ??_OSCILLATOR_Initialize 0071                        ?_ADC_GetConversion 0071  
                _TMR1_SetInterruptHandler 0146                     _TMR1_InterruptHandler 0024  
                     ??_ADC_GetConversion 0073                                  __ptext10 014C  
                                __ptext11 0103                                  __ptext20 0163  
                                __ptext12 0156                                  __ptext13 0123  
                              _T1GCONbits 0019                                  __ptext14 00CA  
                                __ptext16 012E                                  __ptext17 0113  
                                __ptext18 0166                                  __ptext19 009B  
                       ??_TMR1_StartTimer 0071                             __size_of_main 0060  
            _TMR0_DefaultInterruptHandler 0000                 __end_of_ADC_GetConversion 00DF  
                                int$flags 007E                         ??_TMR2_StartTimer 0071  
      __end_of_INTERRUPT_InterruptManager 0030                _INTERRUPT_InterruptManager 0004  
                              _INTCONbits 000B                   __size_of_WDT_Initialize 0004  
                                intlevel1 0000                   ?_PIN_MANAGER_Initialize 0070  
                       __CFG_CLKOUTEN$OFF 0000                          ??_ADC_Initialize 0071  
                          _StartupCounter 007B                                _OPTION_REG 0095  
                         _TMR0_Initialize 00DF            __end_of_PIN_MANAGER_Initialize 0113  
                   _TMR2_InterruptHandler 0020                __size_of_ADC_GetConversion 0015  
                         _TMR1_Initialize 00B4  
