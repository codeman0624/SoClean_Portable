

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat Dec 23 21:02:12 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	12F1501
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     	;# 
    35  0001                     	;# 
    36  0002                     	;# 
    37  0003                     	;# 
    38  0004                     	;# 
    39  0005                     	;# 
    40  0006                     	;# 
    41  0007                     	;# 
    42  0008                     	;# 
    43  0009                     	;# 
    44  000A                     	;# 
    45  000B                     	;# 
    46  000C                     	;# 
    47  0011                     	;# 
    48  0012                     	;# 
    49  0013                     	;# 
    50  0015                     	;# 
    51  0016                     	;# 
    52  0016                     	;# 
    53  0017                     	;# 
    54  0018                     	;# 
    55  0019                     	;# 
    56  001A                     	;# 
    57  001B                     	;# 
    58  001C                     	;# 
    59  008C                     	;# 
    60  0091                     	;# 
    61  0092                     	;# 
    62  0093                     	;# 
    63  0095                     	;# 
    64  0096                     	;# 
    65  0097                     	;# 
    66  0099                     	;# 
    67  009A                     	;# 
    68  009B                     	;# 
    69  009B                     	;# 
    70  009C                     	;# 
    71  009D                     	;# 
    72  009E                     	;# 
    73  009F                     	;# 
    74  010C                     	;# 
    75  0111                     	;# 
    76  0112                     	;# 
    77  0115                     	;# 
    78  0116                     	;# 
    79  0117                     	;# 
    80  0118                     	;# 
    81  0119                     	;# 
    82  011D                     	;# 
    83  018C                     	;# 
    84  0191                     	;# 
    85  0191                     	;# 
    86  0192                     	;# 
    87  0193                     	;# 
    88  0193                     	;# 
    89  0194                     	;# 
    90  0195                     	;# 
    91  0196                     	;# 
    92  0197                     	;# 
    93  020C                     	;# 
    94  0391                     	;# 
    95  0392                     	;# 
    96  0393                     	;# 
    97  0498                     	;# 
    98  0498                     	;# 
    99  0499                     	;# 
   100  049A                     	;# 
   101  049B                     	;# 
   102  049B                     	;# 
   103  049C                     	;# 
   104  049D                     	;# 
   105  049E                     	;# 
   106  049F                     	;# 
   107  0611                     	;# 
   108  0612                     	;# 
   109  0613                     	;# 
   110  0613                     	;# 
   111  0614                     	;# 
   112  0615                     	;# 
   113  0616                     	;# 
   114  0616                     	;# 
   115  0617                     	;# 
   116  0618                     	;# 
   117  0619                     	;# 
   118  0619                     	;# 
   119  061A                     	;# 
   120  061B                     	;# 
   121  061C                     	;# 
   122  061C                     	;# 
   123  0691                     	;# 
   124  0692                     	;# 
   125  0693                     	;# 
   126  0694                     	;# 
   127  0695                     	;# 
   128  0F0F                     	;# 
   129  0F10                     	;# 
   130  0F11                     	;# 
   131  0F12                     	;# 
   132  0F13                     	;# 
   133  0F14                     	;# 
   134  0F15                     	;# 
   135  0F16                     	;# 
   136  0F17                     	;# 
   137  0F18                     	;# 
   138  0F19                     	;# 
   139  0F1A                     	;# 
   140  0F1B                     	;# 
   141  0F1C                     	;# 
   142  0F1D                     	;# 
   143  0F1E                     	;# 
   144  0F1F                     	;# 
   145  0FE3                     	;# 
   146  0FE4                     	;# 
   147  0FE5                     	;# 
   148  0FE6                     	;# 
   149  0FE7                     	;# 
   150  0FE8                     	;# 
   151  0FE9                     	;# 
   152  0FEA                     	;# 
   153  0FEB                     	;# 
   154  0FED                     	;# 
   155  0FEE                     	;# 
   156  0FEF                     	;# 
   157  0000                     	;# 
   158  0001                     	;# 
   159  0002                     	;# 
   160  0003                     	;# 
   161  0004                     	;# 
   162  0005                     	;# 
   163  0006                     	;# 
   164  0007                     	;# 
   165  0008                     	;# 
   166  0009                     	;# 
   167  000A                     	;# 
   168  000B                     	;# 
   169  000C                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0013                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  008C                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  010C                     	;# 
   198  0111                     	;# 
   199  0112                     	;# 
   200  0115                     	;# 
   201  0116                     	;# 
   202  0117                     	;# 
   203  0118                     	;# 
   204  0119                     	;# 
   205  011D                     	;# 
   206  018C                     	;# 
   207  0191                     	;# 
   208  0191                     	;# 
   209  0192                     	;# 
   210  0193                     	;# 
   211  0193                     	;# 
   212  0194                     	;# 
   213  0195                     	;# 
   214  0196                     	;# 
   215  0197                     	;# 
   216  020C                     	;# 
   217  0391                     	;# 
   218  0392                     	;# 
   219  0393                     	;# 
   220  0498                     	;# 
   221  0498                     	;# 
   222  0499                     	;# 
   223  049A                     	;# 
   224  049B                     	;# 
   225  049B                     	;# 
   226  049C                     	;# 
   227  049D                     	;# 
   228  049E                     	;# 
   229  049F                     	;# 
   230  0611                     	;# 
   231  0612                     	;# 
   232  0613                     	;# 
   233  0613                     	;# 
   234  0614                     	;# 
   235  0615                     	;# 
   236  0616                     	;# 
   237  0616                     	;# 
   238  0617                     	;# 
   239  0618                     	;# 
   240  0619                     	;# 
   241  0619                     	;# 
   242  061A                     	;# 
   243  061B                     	;# 
   244  061C                     	;# 
   245  061C                     	;# 
   246  0691                     	;# 
   247  0692                     	;# 
   248  0693                     	;# 
   249  0694                     	;# 
   250  0695                     	;# 
   251  0F0F                     	;# 
   252  0F10                     	;# 
   253  0F11                     	;# 
   254  0F12                     	;# 
   255  0F13                     	;# 
   256  0F14                     	;# 
   257  0F15                     	;# 
   258  0F16                     	;# 
   259  0F17                     	;# 
   260  0F18                     	;# 
   261  0F19                     	;# 
   262  0F1A                     	;# 
   263  0F1B                     	;# 
   264  0F1C                     	;# 
   265  0F1D                     	;# 
   266  0F1E                     	;# 
   267  0F1F                     	;# 
   268  0FE3                     	;# 
   269  0FE4                     	;# 
   270  0FE5                     	;# 
   271  0FE6                     	;# 
   272  0FE7                     	;# 
   273  0FE8                     	;# 
   274  0FE9                     	;# 
   275  0FEA                     	;# 
   276  0FEB                     	;# 
   277  0FED                     	;# 
   278  0FEE                     	;# 
   279  0FEF                     	;# 
   280  0000                     	;# 
   281  0001                     	;# 
   282  0002                     	;# 
   283  0003                     	;# 
   284  0004                     	;# 
   285  0005                     	;# 
   286  0006                     	;# 
   287  0007                     	;# 
   288  0008                     	;# 
   289  0009                     	;# 
   290  000A                     	;# 
   291  000B                     	;# 
   292  000C                     	;# 
   293  0011                     	;# 
   294  0012                     	;# 
   295  0013                     	;# 
   296  0015                     	;# 
   297  0016                     	;# 
   298  0016                     	;# 
   299  0017                     	;# 
   300  0018                     	;# 
   301  0019                     	;# 
   302  001A                     	;# 
   303  001B                     	;# 
   304  001C                     	;# 
   305  008C                     	;# 
   306  0091                     	;# 
   307  0092                     	;# 
   308  0093                     	;# 
   309  0095                     	;# 
   310  0096                     	;# 
   311  0097                     	;# 
   312  0099                     	;# 
   313  009A                     	;# 
   314  009B                     	;# 
   315  009B                     	;# 
   316  009C                     	;# 
   317  009D                     	;# 
   318  009E                     	;# 
   319  009F                     	;# 
   320  010C                     	;# 
   321  0111                     	;# 
   322  0112                     	;# 
   323  0115                     	;# 
   324  0116                     	;# 
   325  0117                     	;# 
   326  0118                     	;# 
   327  0119                     	;# 
   328  011D                     	;# 
   329  018C                     	;# 
   330  0191                     	;# 
   331  0191                     	;# 
   332  0192                     	;# 
   333  0193                     	;# 
   334  0193                     	;# 
   335  0194                     	;# 
   336  0195                     	;# 
   337  0196                     	;# 
   338  0197                     	;# 
   339  020C                     	;# 
   340  0391                     	;# 
   341  0392                     	;# 
   342  0393                     	;# 
   343  0498                     	;# 
   344  0498                     	;# 
   345  0499                     	;# 
   346  049A                     	;# 
   347  049B                     	;# 
   348  049B                     	;# 
   349  049C                     	;# 
   350  049D                     	;# 
   351  049E                     	;# 
   352  049F                     	;# 
   353  0611                     	;# 
   354  0612                     	;# 
   355  0613                     	;# 
   356  0613                     	;# 
   357  0614                     	;# 
   358  0615                     	;# 
   359  0616                     	;# 
   360  0616                     	;# 
   361  0617                     	;# 
   362  0618                     	;# 
   363  0619                     	;# 
   364  0619                     	;# 
   365  061A                     	;# 
   366  061B                     	;# 
   367  061C                     	;# 
   368  061C                     	;# 
   369  0691                     	;# 
   370  0692                     	;# 
   371  0693                     	;# 
   372  0694                     	;# 
   373  0695                     	;# 
   374  0F0F                     	;# 
   375  0F10                     	;# 
   376  0F11                     	;# 
   377  0F12                     	;# 
   378  0F13                     	;# 
   379  0F14                     	;# 
   380  0F15                     	;# 
   381  0F16                     	;# 
   382  0F17                     	;# 
   383  0F18                     	;# 
   384  0F19                     	;# 
   385  0F1A                     	;# 
   386  0F1B                     	;# 
   387  0F1C                     	;# 
   388  0F1D                     	;# 
   389  0F1E                     	;# 
   390  0F1F                     	;# 
   391  0FE3                     	;# 
   392  0FE4                     	;# 
   393  0FE5                     	;# 
   394  0FE6                     	;# 
   395  0FE7                     	;# 
   396  0FE8                     	;# 
   397  0FE9                     	;# 
   398  0FEA                     	;# 
   399  0FEB                     	;# 
   400  0FED                     	;# 
   401  0FEE                     	;# 
   402  0FEF                     	;# 
   403  0000                     	;# 
   404  0001                     	;# 
   405  0002                     	;# 
   406  0003                     	;# 
   407  0004                     	;# 
   408  0005                     	;# 
   409  0006                     	;# 
   410  0007                     	;# 
   411  0008                     	;# 
   412  0009                     	;# 
   413  000A                     	;# 
   414  000B                     	;# 
   415  000C                     	;# 
   416  0011                     	;# 
   417  0012                     	;# 
   418  0013                     	;# 
   419  0015                     	;# 
   420  0016                     	;# 
   421  0016                     	;# 
   422  0017                     	;# 
   423  0018                     	;# 
   424  0019                     	;# 
   425  001A                     	;# 
   426  001B                     	;# 
   427  001C                     	;# 
   428  008C                     	;# 
   429  0091                     	;# 
   430  0092                     	;# 
   431  0093                     	;# 
   432  0095                     	;# 
   433  0096                     	;# 
   434  0097                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  009F                     	;# 
   443  010C                     	;# 
   444  0111                     	;# 
   445  0112                     	;# 
   446  0115                     	;# 
   447  0116                     	;# 
   448  0117                     	;# 
   449  0118                     	;# 
   450  0119                     	;# 
   451  011D                     	;# 
   452  018C                     	;# 
   453  0191                     	;# 
   454  0191                     	;# 
   455  0192                     	;# 
   456  0193                     	;# 
   457  0193                     	;# 
   458  0194                     	;# 
   459  0195                     	;# 
   460  0196                     	;# 
   461  0197                     	;# 
   462  020C                     	;# 
   463  0391                     	;# 
   464  0392                     	;# 
   465  0393                     	;# 
   466  0498                     	;# 
   467  0498                     	;# 
   468  0499                     	;# 
   469  049A                     	;# 
   470  049B                     	;# 
   471  049B                     	;# 
   472  049C                     	;# 
   473  049D                     	;# 
   474  049E                     	;# 
   475  049F                     	;# 
   476  0611                     	;# 
   477  0612                     	;# 
   478  0613                     	;# 
   479  0613                     	;# 
   480  0614                     	;# 
   481  0615                     	;# 
   482  0616                     	;# 
   483  0616                     	;# 
   484  0617                     	;# 
   485  0618                     	;# 
   486  0619                     	;# 
   487  0619                     	;# 
   488  061A                     	;# 
   489  061B                     	;# 
   490  061C                     	;# 
   491  061C                     	;# 
   492  0691                     	;# 
   493  0692                     	;# 
   494  0693                     	;# 
   495  0694                     	;# 
   496  0695                     	;# 
   497  0F0F                     	;# 
   498  0F10                     	;# 
   499  0F11                     	;# 
   500  0F12                     	;# 
   501  0F13                     	;# 
   502  0F14                     	;# 
   503  0F15                     	;# 
   504  0F16                     	;# 
   505  0F17                     	;# 
   506  0F18                     	;# 
   507  0F19                     	;# 
   508  0F1A                     	;# 
   509  0F1B                     	;# 
   510  0F1C                     	;# 
   511  0F1D                     	;# 
   512  0F1E                     	;# 
   513  0F1F                     	;# 
   514  0FE3                     	;# 
   515  0FE4                     	;# 
   516  0FE5                     	;# 
   517  0FE6                     	;# 
   518  0FE7                     	;# 
   519  0FE8                     	;# 
   520  0FE9                     	;# 
   521  0FEA                     	;# 
   522  0FEB                     	;# 
   523  0FED                     	;# 
   524  0FEE                     	;# 
   525  0FEF                     	;# 
   526  0000                     	;# 
   527  0001                     	;# 
   528  0002                     	;# 
   529  0003                     	;# 
   530  0004                     	;# 
   531  0005                     	;# 
   532  0006                     	;# 
   533  0007                     	;# 
   534  0008                     	;# 
   535  0009                     	;# 
   536  000A                     	;# 
   537  000B                     	;# 
   538  000C                     	;# 
   539  0011                     	;# 
   540  0012                     	;# 
   541  0013                     	;# 
   542  0015                     	;# 
   543  0016                     	;# 
   544  0016                     	;# 
   545  0017                     	;# 
   546  0018                     	;# 
   547  0019                     	;# 
   548  001A                     	;# 
   549  001B                     	;# 
   550  001C                     	;# 
   551  008C                     	;# 
   552  0091                     	;# 
   553  0092                     	;# 
   554  0093                     	;# 
   555  0095                     	;# 
   556  0096                     	;# 
   557  0097                     	;# 
   558  0099                     	;# 
   559  009A                     	;# 
   560  009B                     	;# 
   561  009B                     	;# 
   562  009C                     	;# 
   563  009D                     	;# 
   564  009E                     	;# 
   565  009F                     	;# 
   566  010C                     	;# 
   567  0111                     	;# 
   568  0112                     	;# 
   569  0115                     	;# 
   570  0116                     	;# 
   571  0117                     	;# 
   572  0118                     	;# 
   573  0119                     	;# 
   574  011D                     	;# 
   575  018C                     	;# 
   576  0191                     	;# 
   577  0191                     	;# 
   578  0192                     	;# 
   579  0193                     	;# 
   580  0193                     	;# 
   581  0194                     	;# 
   582  0195                     	;# 
   583  0196                     	;# 
   584  0197                     	;# 
   585  020C                     	;# 
   586  0391                     	;# 
   587  0392                     	;# 
   588  0393                     	;# 
   589  0498                     	;# 
   590  0498                     	;# 
   591  0499                     	;# 
   592  049A                     	;# 
   593  049B                     	;# 
   594  049B                     	;# 
   595  049C                     	;# 
   596  049D                     	;# 
   597  049E                     	;# 
   598  049F                     	;# 
   599  0611                     	;# 
   600  0612                     	;# 
   601  0613                     	;# 
   602  0613                     	;# 
   603  0614                     	;# 
   604  0615                     	;# 
   605  0616                     	;# 
   606  0616                     	;# 
   607  0617                     	;# 
   608  0618                     	;# 
   609  0619                     	;# 
   610  0619                     	;# 
   611  061A                     	;# 
   612  061B                     	;# 
   613  061C                     	;# 
   614  061C                     	;# 
   615  0691                     	;# 
   616  0692                     	;# 
   617  0693                     	;# 
   618  0694                     	;# 
   619  0695                     	;# 
   620  0F0F                     	;# 
   621  0F10                     	;# 
   622  0F11                     	;# 
   623  0F12                     	;# 
   624  0F13                     	;# 
   625  0F14                     	;# 
   626  0F15                     	;# 
   627  0F16                     	;# 
   628  0F17                     	;# 
   629  0F18                     	;# 
   630  0F19                     	;# 
   631  0F1A                     	;# 
   632  0F1B                     	;# 
   633  0F1C                     	;# 
   634  0F1D                     	;# 
   635  0F1E                     	;# 
   636  0F1F                     	;# 
   637  0FE3                     	;# 
   638  0FE4                     	;# 
   639  0FE5                     	;# 
   640  0FE6                     	;# 
   641  0FE7                     	;# 
   642  0FE8                     	;# 
   643  0FE9                     	;# 
   644  0FEA                     	;# 
   645  0FEB                     	;# 
   646  0FED                     	;# 
   647  0FEE                     	;# 
   648  0FEF                     	;# 
   649  0000                     	;# 
   650  0001                     	;# 
   651  0002                     	;# 
   652  0003                     	;# 
   653  0004                     	;# 
   654  0005                     	;# 
   655  0006                     	;# 
   656  0007                     	;# 
   657  0008                     	;# 
   658  0009                     	;# 
   659  000A                     	;# 
   660  000B                     	;# 
   661  000C                     	;# 
   662  0011                     	;# 
   663  0012                     	;# 
   664  0013                     	;# 
   665  0015                     	;# 
   666  0016                     	;# 
   667  0016                     	;# 
   668  0017                     	;# 
   669  0018                     	;# 
   670  0019                     	;# 
   671  001A                     	;# 
   672  001B                     	;# 
   673  001C                     	;# 
   674  008C                     	;# 
   675  0091                     	;# 
   676  0092                     	;# 
   677  0093                     	;# 
   678  0095                     	;# 
   679  0096                     	;# 
   680  0097                     	;# 
   681  0099                     	;# 
   682  009A                     	;# 
   683  009B                     	;# 
   684  009B                     	;# 
   685  009C                     	;# 
   686  009D                     	;# 
   687  009E                     	;# 
   688  009F                     	;# 
   689  010C                     	;# 
   690  0111                     	;# 
   691  0112                     	;# 
   692  0115                     	;# 
   693  0116                     	;# 
   694  0117                     	;# 
   695  0118                     	;# 
   696  0119                     	;# 
   697  011D                     	;# 
   698  018C                     	;# 
   699  0191                     	;# 
   700  0191                     	;# 
   701  0192                     	;# 
   702  0193                     	;# 
   703  0193                     	;# 
   704  0194                     	;# 
   705  0195                     	;# 
   706  0196                     	;# 
   707  0197                     	;# 
   708  020C                     	;# 
   709  0391                     	;# 
   710  0392                     	;# 
   711  0393                     	;# 
   712  0498                     	;# 
   713  0498                     	;# 
   714  0499                     	;# 
   715  049A                     	;# 
   716  049B                     	;# 
   717  049B                     	;# 
   718  049C                     	;# 
   719  049D                     	;# 
   720  049E                     	;# 
   721  049F                     	;# 
   722  0611                     	;# 
   723  0612                     	;# 
   724  0613                     	;# 
   725  0613                     	;# 
   726  0614                     	;# 
   727  0615                     	;# 
   728  0616                     	;# 
   729  0616                     	;# 
   730  0617                     	;# 
   731  0618                     	;# 
   732  0619                     	;# 
   733  0619                     	;# 
   734  061A                     	;# 
   735  061B                     	;# 
   736  061C                     	;# 
   737  061C                     	;# 
   738  0691                     	;# 
   739  0692                     	;# 
   740  0693                     	;# 
   741  0694                     	;# 
   742  0695                     	;# 
   743  0F0F                     	;# 
   744  0F10                     	;# 
   745  0F11                     	;# 
   746  0F12                     	;# 
   747  0F13                     	;# 
   748  0F14                     	;# 
   749  0F15                     	;# 
   750  0F16                     	;# 
   751  0F17                     	;# 
   752  0F18                     	;# 
   753  0F19                     	;# 
   754  0F1A                     	;# 
   755  0F1B                     	;# 
   756  0F1C                     	;# 
   757  0F1D                     	;# 
   758  0F1E                     	;# 
   759  0F1F                     	;# 
   760  0FE3                     	;# 
   761  0FE4                     	;# 
   762  0FE5                     	;# 
   763  0FE6                     	;# 
   764  0FE7                     	;# 
   765  0FE8                     	;# 
   766  0FE9                     	;# 
   767  0FEA                     	;# 
   768  0FEB                     	;# 
   769  0FED                     	;# 
   770  0FEE                     	;# 
   771  0FEF                     	;# 
   772  0000                     	;# 
   773  0001                     	;# 
   774  0002                     	;# 
   775  0003                     	;# 
   776  0004                     	;# 
   777  0005                     	;# 
   778  0006                     	;# 
   779  0007                     	;# 
   780  0008                     	;# 
   781  0009                     	;# 
   782  000A                     	;# 
   783  000B                     	;# 
   784  000C                     	;# 
   785  0011                     	;# 
   786  0012                     	;# 
   787  0013                     	;# 
   788  0015                     	;# 
   789  0016                     	;# 
   790  0016                     	;# 
   791  0017                     	;# 
   792  0018                     	;# 
   793  0019                     	;# 
   794  001A                     	;# 
   795  001B                     	;# 
   796  001C                     	;# 
   797  008C                     	;# 
   798  0091                     	;# 
   799  0092                     	;# 
   800  0093                     	;# 
   801  0095                     	;# 
   802  0096                     	;# 
   803  0097                     	;# 
   804  0099                     	;# 
   805  009A                     	;# 
   806  009B                     	;# 
   807  009B                     	;# 
   808  009C                     	;# 
   809  009D                     	;# 
   810  009E                     	;# 
   811  009F                     	;# 
   812  010C                     	;# 
   813  0111                     	;# 
   814  0112                     	;# 
   815  0115                     	;# 
   816  0116                     	;# 
   817  0117                     	;# 
   818  0118                     	;# 
   819  0119                     	;# 
   820  011D                     	;# 
   821  018C                     	;# 
   822  0191                     	;# 
   823  0191                     	;# 
   824  0192                     	;# 
   825  0193                     	;# 
   826  0193                     	;# 
   827  0194                     	;# 
   828  0195                     	;# 
   829  0196                     	;# 
   830  0197                     	;# 
   831  020C                     	;# 
   832  0391                     	;# 
   833  0392                     	;# 
   834  0393                     	;# 
   835  0498                     	;# 
   836  0498                     	;# 
   837  0499                     	;# 
   838  049A                     	;# 
   839  049B                     	;# 
   840  049B                     	;# 
   841  049C                     	;# 
   842  049D                     	;# 
   843  049E                     	;# 
   844  049F                     	;# 
   845  0611                     	;# 
   846  0612                     	;# 
   847  0613                     	;# 
   848  0613                     	;# 
   849  0614                     	;# 
   850  0615                     	;# 
   851  0616                     	;# 
   852  0616                     	;# 
   853  0617                     	;# 
   854  0618                     	;# 
   855  0619                     	;# 
   856  0619                     	;# 
   857  061A                     	;# 
   858  061B                     	;# 
   859  061C                     	;# 
   860  061C                     	;# 
   861  0691                     	;# 
   862  0692                     	;# 
   863  0693                     	;# 
   864  0694                     	;# 
   865  0695                     	;# 
   866  0F0F                     	;# 
   867  0F10                     	;# 
   868  0F11                     	;# 
   869  0F12                     	;# 
   870  0F13                     	;# 
   871  0F14                     	;# 
   872  0F15                     	;# 
   873  0F16                     	;# 
   874  0F17                     	;# 
   875  0F18                     	;# 
   876  0F19                     	;# 
   877  0F1A                     	;# 
   878  0F1B                     	;# 
   879  0F1C                     	;# 
   880  0F1D                     	;# 
   881  0F1E                     	;# 
   882  0F1F                     	;# 
   883  0FE3                     	;# 
   884  0FE4                     	;# 
   885  0FE5                     	;# 
   886  0FE6                     	;# 
   887  0FE7                     	;# 
   888  0FE8                     	;# 
   889  0FE9                     	;# 
   890  0FEA                     	;# 
   891  0FEB                     	;# 
   892  0FED                     	;# 
   893  0FEE                     	;# 
   894  0FEF                     	;# 
   895  0000                     	;# 
   896  0001                     	;# 
   897  0002                     	;# 
   898  0003                     	;# 
   899  0004                     	;# 
   900  0005                     	;# 
   901  0006                     	;# 
   902  0007                     	;# 
   903  0008                     	;# 
   904  0009                     	;# 
   905  000A                     	;# 
   906  000B                     	;# 
   907  000C                     	;# 
   908  0011                     	;# 
   909  0012                     	;# 
   910  0013                     	;# 
   911  0015                     	;# 
   912  0016                     	;# 
   913  0016                     	;# 
   914  0017                     	;# 
   915  0018                     	;# 
   916  0019                     	;# 
   917  001A                     	;# 
   918  001B                     	;# 
   919  001C                     	;# 
   920  008C                     	;# 
   921  0091                     	;# 
   922  0092                     	;# 
   923  0093                     	;# 
   924  0095                     	;# 
   925  0096                     	;# 
   926  0097                     	;# 
   927  0099                     	;# 
   928  009A                     	;# 
   929  009B                     	;# 
   930  009B                     	;# 
   931  009C                     	;# 
   932  009D                     	;# 
   933  009E                     	;# 
   934  009F                     	;# 
   935  010C                     	;# 
   936  0111                     	;# 
   937  0112                     	;# 
   938  0115                     	;# 
   939  0116                     	;# 
   940  0117                     	;# 
   941  0118                     	;# 
   942  0119                     	;# 
   943  011D                     	;# 
   944  018C                     	;# 
   945  0191                     	;# 
   946  0191                     	;# 
   947  0192                     	;# 
   948  0193                     	;# 
   949  0193                     	;# 
   950  0194                     	;# 
   951  0195                     	;# 
   952  0196                     	;# 
   953  0197                     	;# 
   954  020C                     	;# 
   955  0391                     	;# 
   956  0392                     	;# 
   957  0393                     	;# 
   958  0498                     	;# 
   959  0498                     	;# 
   960  0499                     	;# 
   961  049A                     	;# 
   962  049B                     	;# 
   963  049B                     	;# 
   964  049C                     	;# 
   965  049D                     	;# 
   966  049E                     	;# 
   967  049F                     	;# 
   968  0611                     	;# 
   969  0612                     	;# 
   970  0613                     	;# 
   971  0613                     	;# 
   972  0614                     	;# 
   973  0615                     	;# 
   974  0616                     	;# 
   975  0616                     	;# 
   976  0617                     	;# 
   977  0618                     	;# 
   978  0619                     	;# 
   979  0619                     	;# 
   980  061A                     	;# 
   981  061B                     	;# 
   982  061C                     	;# 
   983  061C                     	;# 
   984  0691                     	;# 
   985  0692                     	;# 
   986  0693                     	;# 
   987  0694                     	;# 
   988  0695                     	;# 
   989  0F0F                     	;# 
   990  0F10                     	;# 
   991  0F11                     	;# 
   992  0F12                     	;# 
   993  0F13                     	;# 
   994  0F14                     	;# 
   995  0F15                     	;# 
   996  0F16                     	;# 
   997  0F17                     	;# 
   998  0F18                     	;# 
   999  0F19                     	;# 
  1000  0F1A                     	;# 
  1001  0F1B                     	;# 
  1002  0F1C                     	;# 
  1003  0F1D                     	;# 
  1004  0F1E                     	;# 
  1005  0F1F                     	;# 
  1006  0FE3                     	;# 
  1007  0FE4                     	;# 
  1008  0FE5                     	;# 
  1009  0FE6                     	;# 
  1010  0FE7                     	;# 
  1011  0FE8                     	;# 
  1012  0FE9                     	;# 
  1013  0FEA                     	;# 
  1014  0FEB                     	;# 
  1015  0FED                     	;# 
  1016  0FEE                     	;# 
  1017  0FEF                     	;# 
  1018                           
  1019 ;; Function _TMR0_DefaultInterruptHandler is unused but had its address taken
  1020  0000                     
  1021 ;; Function _TMR2_DefaultInterruptHandler is unused but had its address taken
  1022  0000                     
  1023                           	psect	idataCOMMON
  1024  0158                     __pidataCOMMON:	
  1025                           
  1026                           ;initializer for _CycleTime
  1027  0158  3486               	retlw	134
  1028  0159  3401               	retlw	1
  1029                           
  1030                           ;initializer for _StartupCounter
  1031  015A  3478               	retlw	120
  1032                           
  1033                           	psect	nvCOMMON
  1034  0075                     __pnvCOMMON:	
  1035  0075                     _timer1ReloadVal:	
  1036  0075                     	ds	2
  1037  0077                     _timer0ReloadVal:	
  1038  0077                     	ds	1
  1039                           
  1040                           	psect	nvBANK0
  1041  0020                     __pnvBANK0:	
  1042  0020                     _TMR0_InterruptHandler:	
  1043  0020                     	ds	2
  1044  0022                     _TMR1_InterruptHandler:	
  1045  0022                     	ds	2
  1046  0024                     _TMR2_InterruptHandler:	
  1047  0024                     	ds	2
  1048  0026                     _Counter:	
  1049  0026                     	ds	1
  1050  000B                     _INTCONbits	set	11
  1051  0011                     _PIR1bits	set	17
  1052  000C                     _PORTAbits	set	12
  1053  001B                     _PR2	set	27
  1054  0018                     _T1CON	set	24
  1055  0018                     _T1CONbits	set	24
  1056  0019                     _T1GCON	set	25
  1057  0019                     _T1GCONbits	set	25
  1058  001C                     _T2CON	set	28
  1059  001C                     _T2CONbits	set	28
  1060  0015                     _TMR0	set	21
  1061  0017                     _TMR1H	set	23
  1062  0016                     _TMR1L	set	22
  1063  001A                     _TMR2	set	26
  1064  009D                     _ADCON0	set	157
  1065  009D                     _ADCON0bits	set	157
  1066  009E                     _ADCON1	set	158
  1067  009F                     _ADCON2	set	159
  1068  009C                     _ADRESH	set	156
  1069  009B                     _ADRESL	set	155
  1070  0095                     _OPTION_REG	set	149
  1071  0095                     _OPTION_REGbits	set	149
  1072  0099                     _OSCCON	set	153
  1073  0091                     _PIE1bits	set	145
  1074  008C                     _TRISA	set	140
  1075  0097                     _WDTCON	set	151
  1076  011D                     _APFCON	set	285
  1077  010C                     _LATA	set	268
  1078  010C                     _LATAbits	set	268
  1079  018C                     _ANSELA	set	396
  1080  020C                     _WPUA	set	524
  1081                           
  1082                           ; #config settings
  1083  0000                     
  1084                           	psect	cinit
  1085  0031                     start_initialization:	
  1086  0031                     __initialization:	
  1087                           
  1088                           ; Initialize objects allocated to COMMON
  1089  0031  2158               	fcall	__pidataCOMMON	;fetch initializer
  1090  0032  00F8               	movwf	__pdataCOMMON& (0+127)
  1091  0033  2159               	fcall	__pidataCOMMON+1	;fetch initializer
  1092  0034  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
  1093  0035  215A               	fcall	__pidataCOMMON+2	;fetch initializer
  1094  0036  00FA               	movwf	(__pdataCOMMON+2)& (0+127)
  1095                           
  1096                           ; Clear objects allocated to COMMON
  1097  0037  01FB               	clrf	__pbssCOMMON& (0+127)
  1098  0038                     end_of_initialization:	
  1099                           ;End of C runtime variable initialization code
  1100                           
  1101  0038                     __end_of__initialization:	
  1102  0038  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1103  0039  0020               	movlb	0
  1104  003A  283B               	ljmp	_main	;jump to C main() function
  1105                           
  1106                           	psect	bssCOMMON
  1107  007B                     __pbssCOMMON:	
  1108  007B                     _RunCycle:	
  1109  007B                     	ds	1
  1110                           
  1111                           	psect	dataCOMMON
  1112  0078                     __pdataCOMMON:	
  1113  0078                     _CycleTime:	
  1114  0078                     	ds	2
  1115  007A                     _StartupCounter:	
  1116  007A                     	ds	1
  1117                           
  1118                           	psect	cstackCOMMON
  1119  0070                     __pcstackCOMMON:	
  1120  0070                     ?_TMR0_ISR:	
  1121  0070                     ??_TMR0_ISR:	
  1122                           ; 1 bytes @ 0x0
  1123                           
  1124  0070                     ?_TMR2_ISR:	
  1125                           ; 1 bytes @ 0x0
  1126                           
  1127  0070                     ??_TMR2_ISR:	
  1128                           ; 1 bytes @ 0x0
  1129                           
  1130  0070                     ?_TMR1_ISR:	
  1131                           ; 1 bytes @ 0x0
  1132                           
  1133  0070                     ??_TMR1_ISR:	
  1134                           ; 1 bytes @ 0x0
  1135                           
  1136  0070                     ?_TMR1_DefaultInterruptHandler:	
  1137                           ; 1 bytes @ 0x0
  1138                           
  1139  0070                     ??_TMR1_DefaultInterruptHandler:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142  0070                     ?_TMR1_StartTimer:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145  0070                     ?_OSCILLATOR_Initialize:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148  0070                     ?_WDT_Initialize:	
  1149                           ; 1 bytes @ 0x0
  1150                           
  1151  0070                     ?_TMR2_Initialize:	
  1152                           ; 1 bytes @ 0x0
  1153                           
  1154  0070                     ?_TMR2_StartTimer:	
  1155                           ; 1 bytes @ 0x0
  1156                           
  1157  0070                     ?_PIN_MANAGER_Initialize:	
  1158                           ; 1 bytes @ 0x0
  1159                           
  1160  0070                     ?_ADC_Initialize:	
  1161                           ; 1 bytes @ 0x0
  1162                           
  1163  0070                     ?_ADC_ISR:	
  1164                           ; 1 bytes @ 0x0
  1165                           
  1166  0070                     ??_ADC_ISR:	
  1167                           ; 1 bytes @ 0x0
  1168                           
  1169  0070                     ?_INTERRUPT_InterruptManager:	
  1170                           ; 1 bytes @ 0x0
  1171                           
  1172  0070                     ??_INTERRUPT_InterruptManager:	
  1173                           ; 1 bytes @ 0x0
  1174                           
  1175  0070                     ?_TMR1_Initialize:	
  1176                           ; 1 bytes @ 0x0
  1177                           
  1178  0070                     ?_TMR0_Initialize:	
  1179                           ; 1 bytes @ 0x0
  1180                           
  1181  0070                     ?_SYSTEM_Initialize:	
  1182                           ; 1 bytes @ 0x0
  1183                           
  1184  0070                     ?_main:	
  1185                           ; 1 bytes @ 0x0
  1186                           
  1187                           
  1188                           ; 1 bytes @ 0x0
  1189  0070                     	ds	1
  1190  0071                     ?_TMR1_SetInterruptHandler:	
  1191  0071                     ??_TMR1_StartTimer:	
  1192                           ; 1 bytes @ 0x1
  1193                           
  1194  0071                     ?_TMR0_SetInterruptHandler:	
  1195                           ; 1 bytes @ 0x1
  1196                           
  1197  0071                     ??_OSCILLATOR_Initialize:	
  1198                           ; 1 bytes @ 0x1
  1199                           
  1200  0071                     ??_WDT_Initialize:	
  1201                           ; 1 bytes @ 0x1
  1202                           
  1203  0071                     ?_TMR2_SetInterruptHandler:	
  1204                           ; 1 bytes @ 0x1
  1205                           
  1206  0071                     ??_TMR2_StartTimer:	
  1207                           ; 1 bytes @ 0x1
  1208                           
  1209  0071                     ??_PIN_MANAGER_Initialize:	
  1210                           ; 1 bytes @ 0x1
  1211                           
  1212  0071                     ??_ADC_Initialize:	
  1213                           ; 1 bytes @ 0x1
  1214                           
  1215  0071                     ?_ADC_GetConversion:	
  1216                           ; 1 bytes @ 0x1
  1217                           
  1218  0071                     TMR1_SetInterruptHandler@InterruptHandler:	
  1219                           ; 2 bytes @ 0x1
  1220                           
  1221  0071                     TMR0_SetInterruptHandler@InterruptHandler:	
  1222                           ; 2 bytes @ 0x1
  1223                           
  1224  0071                     TMR2_SetInterruptHandler@InterruptHandler:	
  1225                           ; 2 bytes @ 0x1
  1226                           
  1227                           
  1228                           ; 2 bytes @ 0x1
  1229  0071                     	ds	2
  1230  0073                     ??_TMR1_SetInterruptHandler:	
  1231  0073                     ??_TMR0_SetInterruptHandler:	
  1232                           ; 1 bytes @ 0x3
  1233                           
  1234  0073                     ??_TMR2_Initialize:	
  1235                           ; 1 bytes @ 0x3
  1236                           
  1237  0073                     ??_TMR2_SetInterruptHandler:	
  1238                           ; 1 bytes @ 0x3
  1239                           
  1240  0073                     ??_ADC_GetConversion:	
  1241                           ; 1 bytes @ 0x3
  1242                           
  1243  0073                     ??_TMR1_Initialize:	
  1244                           ; 1 bytes @ 0x3
  1245                           
  1246  0073                     ??_TMR0_Initialize:	
  1247                           ; 1 bytes @ 0x3
  1248                           
  1249                           
  1250                           ; 1 bytes @ 0x3
  1251  0073                     	ds	1
  1252  0074                     ??_SYSTEM_Initialize:	
  1253  0074                     ADC_GetConversion@channel:	
  1254                           ; 1 bytes @ 0x4
  1255                           
  1256                           
  1257                           ; 1 bytes @ 0x4
  1258  0074                     	ds	1
  1259                           
  1260                           	psect	cstackBANK0
  1261  0027                     __pcstackBANK0:	
  1262  0027                     ??_main:	
  1263                           
  1264                           ; 1 bytes @ 0x0
  1265  0027                     	ds	2
  1266                           
  1267                           	psect	maintext
  1268  003B                     __pmaintext:	
  1269 ;;
  1270 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1271 ;;
  1272 ;; *************** function _main *****************
  1273 ;; Defined at:
  1274 ;;		line 49 in file "main.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;		None
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;		None
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		wreg, status,2, status,0, pclath, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : B1F/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMMON   BANK0
  1288 ;;      Params:         0       0
  1289 ;;      Locals:         0       0
  1290 ;;      Temps:          0       2
  1291 ;;      Totals:         0       2
  1292 ;;Total ram usage:        2 bytes
  1293 ;; Hardware stack levels required when called:    6
  1294 ;; This function calls:
  1295 ;;		_ADC_GetConversion
  1296 ;;		_SYSTEM_Initialize
  1297 ;; This function is called by:
  1298 ;;		Startup code after reset
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           
  1303                           ;psect for function _main
  1304  003B                     _main:	
  1305                           
  1306                           ;main.c: 52: SYSTEM_Initialize();
  1307                           
  1308                           ;incstack = 0
  1309                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1310  003B  2136               	fcall	_SYSTEM_Initialize
  1311                           
  1312                           ;main.c: 70: do { LATAbits.LATA1 = 0; } while(0);
  1313  003C  0022               	movlb	2	; select bank2
  1314  003D  108C               	bcf	12,1	;volatile
  1315                           
  1316                           ;main.c: 71: do { LATAbits.LATA0 = 0; } while(0);
  1317  003E  100C               	bcf	12,0	;volatile
  1318                           
  1319                           ;main.c: 72: do { LATAbits.LATA5 = 0; } while(0);
  1320  003F  128C               	bcf	12,5	;volatile
  1321                           
  1322                           ;main.c: 75: Counter = 10;
  1323  0040  300A               	movlw	10
  1324  0041  0020               	movlb	0	; select bank0
  1325  0042  00A7               	movwf	??_main
  1326  0043  0827               	movf	??_main,w
  1327  0044  00A6               	movwf	_Counter
  1328  0045                     l1129:	
  1329                           ;main.c: 76: while(Counter--)
  1330                           
  1331  0045  3001               	movlw	1
  1332  0046  0020               	movlb	0	; select bank0
  1333  0047  02A6               	subwf	_Counter,f
  1334  0048  0A26               	incf	_Counter,w
  1335  0049  1903               	btfsc	3,2
  1336  004A  2855               	goto	l1131
  1337                           
  1338                           ;main.c: 77: {
  1339                           ;main.c: 78: _delay((unsigned long)((50)*(500000/4000.0)));
  1340  004B  3009               	movlw	9
  1341  004C  00A8               	movwf	??_main+1
  1342  004D  301C               	movlw	28
  1343  004E  00A7               	movwf	??_main
  1344  004F                     u527:	
  1345  004F  0BA7               	decfsz	??_main,f
  1346  0050  284F               	goto	u527
  1347  0051  0BA8               	decfsz	??_main+1,f
  1348  0052  284F               	goto	u527
  1349  0053  0000               	nop
  1350  0054  2845               	goto	l1129
  1351  0055                     l1131:	
  1352                           
  1353                           ;main.c: 79: }
  1354                           ;main.c: 84: if(ADC_GetConversion(ADC_Input) < 485)
  1355  0055  3002               	movlw	2
  1356  0056  20C9               	fcall	_ADC_GetConversion
  1357  0057  3001               	movlw	1
  1358  0058  0272               	subwf	?_ADC_GetConversion+1,w
  1359  0059  30E5               	movlw	229
  1360  005A  1903               	skipnz
  1361  005B  0271               	subwf	?_ADC_GetConversion,w
  1362  005C  1803               	skipnc
  1363  005D  2862               	goto	l1133
  1364                           
  1365                           ;main.c: 85: {
  1366                           ;main.c: 86: do { LATAbits.LATA0 = 1; } while(0);
  1367  005E  0022               	movlb	2	; select bank2
  1368  005F  140C               	bsf	12,0	;volatile
  1369  0060  0063               	sleep	;# 
  1370                           
  1371                           ;main.c: 88: }
  1372  0061  2899               	goto	l339
  1373  0062                     l1133:	
  1374                           ;main.c: 90: else
  1375                           ;main.c: 91: {
  1376                           ;main.c: 92: while(1)
  1377                           
  1378                           
  1379                           ;main.c: 93: {
  1380                           ;main.c: 94: RunCycle = 0;
  1381  0062  01FB               	clrf	_RunCycle
  1382  0063                     l318:	
  1383                           ;main.c: 96: while(PORTAbits.RA3)
  1384                           
  1385  0063  0020               	movlb	0	; select bank0
  1386  0064  1D8C               	btfss	12,3	;volatile
  1387  0065  286B               	goto	l1139
  1388                           
  1389                           ;main.c: 97: {
  1390                           ;main.c: 99: if(StartupCounter == 0)
  1391  0066  087A               	movf	_StartupCounter,w	;volatile
  1392  0067  1D03               	btfss	3,2
  1393  0068  2863               	goto	l318
  1394  0069  0063               	sleep	;# 
  1395  006A  2863               	goto	l318
  1396  006B                     l1139:	
  1397                           
  1398                           ;main.c: 102: }
  1399                           ;main.c: 103: }
  1400                           ;main.c: 104: _delay((unsigned long)((50)*(500000/4000.0)));
  1401  006B  3009               	movlw	9
  1402  006C  00A8               	movwf	??_main+1
  1403  006D  301C               	movlw	28
  1404  006E  00A7               	movwf	??_main
  1405  006F                     u537:	
  1406  006F  0BA7               	decfsz	??_main,f
  1407  0070  286F               	goto	u537
  1408  0071  0BA8               	decfsz	??_main+1,f
  1409  0072  286F               	goto	u537
  1410  0073  0000               	nop
  1411                           
  1412                           ;main.c: 106: if(!PORTAbits.RA3)
  1413  0074  0020               	movlb	0	; select bank0
  1414  0075  198C               	btfsc	12,3	;volatile
  1415  0076  2862               	goto	l1133
  1416                           
  1417                           ;main.c: 109: }
  1418                           ;main.c: 110: }
  1419                           ;main.c: 111: INTCONbits.TMR0IE = 0;
  1420                           
  1421                           ;main.c: 107: {
  1422                           ;main.c: 108: break;
  1423  0077  128B               	bcf	11,5	;volatile
  1424                           
  1425                           ;main.c: 115: RunCycle = 1;
  1426  0078  01FB               	clrf	_RunCycle
  1427  0079  0AFB               	incf	_RunCycle,f
  1428  007A                     l1145:	
  1429                           ;main.c: 118: while(CycleTime > 0)
  1430                           
  1431  007A  0879               	movf	_CycleTime+1,w	;volatile
  1432  007B  3A80               	xorlw	128
  1433  007C  0020               	movlb	0	; select bank0
  1434  007D  00A7               	movwf	??_main
  1435  007E  3080               	movlw	128
  1436  007F  0227               	subwf	??_main,w
  1437  0080  1D03               	skipz
  1438  0081  2884               	goto	u505
  1439  0082  3001               	movlw	1
  1440  0083  0278               	subwf	_CycleTime,w	;volatile
  1441  0084                     u505:	
  1442  0084  1C03               	btfss	3,0
  1443  0085  288A               	goto	l332
  1444                           
  1445                           ;main.c: 119: {
  1446                           ;main.c: 121: do { LATAbits.LATA1 = 1; } while(0);
  1447  0086  0022               	movlb	2	; select bank2
  1448  0087  148C               	bsf	12,1	;volatile
  1449                           
  1450                           ;main.c: 123: do { LATAbits.LATA5 = 1; } while(0);
  1451  0088  168C               	bsf	12,5	;volatile
  1452  0089  287A               	goto	l1145
  1453  008A                     l332:	
  1454                           ;main.c: 124: }
  1455                           ;main.c: 127: do { LATAbits.LATA1 = 0; } while(0);
  1456                           
  1457  008A  0022               	movlb	2	; select bank2
  1458  008B  108C               	bcf	12,1	;volatile
  1459                           
  1460                           ;main.c: 128: do { LATAbits.LATA5 = 0; } while(0);
  1461  008C  128C               	bcf	12,5	;volatile
  1462                           
  1463                           ;main.c: 132: if(ADC_GetConversion(ADC_Input) < 485)
  1464  008D  3002               	movlw	2
  1465  008E  20C9               	fcall	_ADC_GetConversion
  1466  008F  3001               	movlw	1
  1467  0090  0272               	subwf	?_ADC_GetConversion+1,w
  1468  0091  30E5               	movlw	229
  1469  0092  1903               	skipnz
  1470  0093  0271               	subwf	?_ADC_GetConversion,w
  1471  0094  1803               	skipnc
  1472  0095  2898               	goto	l336
  1473                           
  1474                           ;main.c: 133: {
  1475                           ;main.c: 134: do { LATAbits.LATA0 = 1; } while(0);
  1476  0096  0022               	movlb	2	; select bank2
  1477  0097  140C               	bsf	12,0	;volatile
  1478  0098                     l336:	
  1479  0098  0063               	sleep	;# 
  1480  0099                     l339:	
  1481  0099  2830               	ljmp	start
  1482  009A                     __end_of_main:	
  1483                           
  1484                           	psect	text1
  1485  0136                     __ptext1:	
  1486 ;; *************** function _SYSTEM_Initialize *****************
  1487 ;; Defined at:
  1488 ;;		line 66 in file "mcc_generated_files/mcc.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;		None
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		wreg, status,2, status,0, pclath, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMMON   BANK0
  1502 ;;      Params:         0       0
  1503 ;;      Locals:         0       0
  1504 ;;      Temps:          0       0
  1505 ;;      Totals:         0       0
  1506 ;;Total ram usage:        0 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; Hardware stack levels required when called:    5
  1509 ;; This function calls:
  1510 ;;		_ADC_Initialize
  1511 ;;		_OSCILLATOR_Initialize
  1512 ;;		_PIN_MANAGER_Initialize
  1513 ;;		_TMR0_Initialize
  1514 ;;		_TMR1_Initialize
  1515 ;;		_TMR2_Initialize
  1516 ;;		_WDT_Initialize
  1517 ;; This function is called by:
  1518 ;;		_main
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           
  1523                           ;psect for function _SYSTEM_Initialize
  1524  0136                     _SYSTEM_Initialize:	
  1525                           
  1526                           ;mcc.c: 69: PIN_MANAGER_Initialize();
  1527                           
  1528                           ;incstack = 0
  1529                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1530  0136  2102               	fcall	_PIN_MANAGER_Initialize
  1531                           
  1532                           ;mcc.c: 70: OSCILLATOR_Initialize();
  1533  0137  2154               	fcall	_OSCILLATOR_Initialize
  1534                           
  1535                           ;mcc.c: 71: WDT_Initialize();
  1536  0138  2150               	fcall	_WDT_Initialize
  1537                           
  1538                           ;mcc.c: 72: ADC_Initialize();
  1539  0139  2122               	fcall	_ADC_Initialize
  1540                           
  1541                           ;mcc.c: 73: TMR2_Initialize();
  1542  013A  20F2               	fcall	_TMR2_Initialize
  1543                           
  1544                           ;mcc.c: 74: TMR1_Initialize();
  1545  013B  20B3               	fcall	_TMR1_Initialize
  1546                           
  1547                           ;mcc.c: 75: TMR0_Initialize();
  1548  013C  20DE               	fcall	_TMR0_Initialize
  1549  013D  0008               	return
  1550  013E                     __end_of_SYSTEM_Initialize:	
  1551                           
  1552                           	psect	text2
  1553  0150                     __ptext2:	
  1554 ;; *************** function _WDT_Initialize *****************
  1555 ;; Defined at:
  1556 ;;		line 84 in file "mcc_generated_files/mcc.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;		None
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;		None
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      void 
  1563 ;; Registers used:
  1564 ;;		wreg
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMMON   BANK0
  1570 ;;      Params:         0       0
  1571 ;;      Locals:         0       0
  1572 ;;      Temps:          0       0
  1573 ;;      Totals:         0       0
  1574 ;;Total ram usage:        0 bytes
  1575 ;; Hardware stack levels used:    1
  1576 ;; Hardware stack levels required when called:    3
  1577 ;; This function calls:
  1578 ;;		Nothing
  1579 ;; This function is called by:
  1580 ;;		_SYSTEM_Initialize
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           
  1585                           ;psect for function _WDT_Initialize
  1586  0150                     _WDT_Initialize:	
  1587                           
  1588                           ;mcc.c: 87: WDTCON = 0x16;
  1589                           
  1590                           ;incstack = 0
  1591                           ; Regs used in _WDT_Initialize: [wreg]
  1592  0150  3016               	movlw	22
  1593  0151  0021               	movlb	1	; select bank1
  1594  0152  0097               	movwf	23	;volatile
  1595  0153  0008               	return
  1596  0154                     __end_of_WDT_Initialize:	
  1597                           
  1598                           	psect	text3
  1599  00F2                     __ptext3:	
  1600 ;; *************** function _TMR2_Initialize *****************
  1601 ;; Defined at:
  1602 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;		None
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;		None
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      void 
  1609 ;; Registers used:
  1610 ;;		wreg, status,2, status,0, pclath, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMMON   BANK0
  1616 ;;      Params:         0       0
  1617 ;;      Locals:         0       0
  1618 ;;      Temps:          0       0
  1619 ;;      Totals:         0       0
  1620 ;;Total ram usage:        0 bytes
  1621 ;; Hardware stack levels used:    1
  1622 ;; Hardware stack levels required when called:    4
  1623 ;; This function calls:
  1624 ;;		_TMR2_SetInterruptHandler
  1625 ;;		_TMR2_StartTimer
  1626 ;; This function is called by:
  1627 ;;		_SYSTEM_Initialize
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           
  1632                           ;psect for function _TMR2_Initialize
  1633  00F2                     _TMR2_Initialize:	
  1634                           
  1635                           ;tmr2.c: 69: T2CON = 0x7B;
  1636                           
  1637                           ;incstack = 0
  1638                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1639  00F2  307B               	movlw	123
  1640  00F3  0020               	movlb	0	; select bank0
  1641  00F4  009C               	movwf	28	;volatile
  1642                           
  1643                           ;tmr2.c: 72: PR2 = 0x79;
  1644  00F5  3079               	movlw	121
  1645  00F6  009B               	movwf	27	;volatile
  1646                           
  1647                           ;tmr2.c: 75: TMR2 = 0x00;
  1648  00F7  019A               	clrf	26	;volatile
  1649                           
  1650                           ;tmr2.c: 78: PIR1bits.TMR2IF = 0;
  1651  00F8  1091               	bcf	17,1	;volatile
  1652                           
  1653                           ;tmr2.c: 81: PIE1bits.TMR2IE = 1;
  1654  00F9  0021               	movlb	1	; select bank1
  1655  00FA  1491               	bsf	17,1	;volatile
  1656                           
  1657                           ;tmr2.c: 84: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  1658  00FB  3000               	movlw	0
  1659  00FC  00F1               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  1660  00FD  3000               	movlw	0
  1661  00FE  00F2               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  1662  00FF  213E               	fcall	_TMR2_SetInterruptHandler
  1663                           
  1664                           ;tmr2.c: 87: TMR2_StartTimer();
  1665  0100  215B               	fcall	_TMR2_StartTimer
  1666  0101  0008               	return
  1667  0102                     __end_of_TMR2_Initialize:	
  1668                           
  1669                           	psect	text4
  1670  015B                     __ptext4:	
  1671 ;; *************** function _TMR2_StartTimer *****************
  1672 ;; Defined at:
  1673 ;;		line 90 in file "mcc_generated_files/tmr2.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;		None
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;		None
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		None
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMMON   BANK0
  1687 ;;      Params:         0       0
  1688 ;;      Locals:         0       0
  1689 ;;      Temps:          0       0
  1690 ;;      Totals:         0       0
  1691 ;;Total ram usage:        0 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; Hardware stack levels required when called:    3
  1694 ;; This function calls:
  1695 ;;		Nothing
  1696 ;; This function is called by:
  1697 ;;		_TMR2_Initialize
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           
  1702                           ;psect for function _TMR2_StartTimer
  1703  015B                     _TMR2_StartTimer:	
  1704                           
  1705                           ;tmr2.c: 93: T2CONbits.TMR2ON = 1;
  1706                           
  1707                           ;incstack = 0
  1708                           ; Regs used in _TMR2_StartTimer: []
  1709  015B  0020               	movlb	0	; select bank0
  1710  015C  151C               	bsf	28,2	;volatile
  1711  015D  0008               	return
  1712  015E                     __end_of_TMR2_StartTimer:	
  1713                           
  1714                           	psect	text5
  1715  013E                     __ptext5:	
  1716 ;; *************** function _TMR2_SetInterruptHandler *****************
  1717 ;; Defined at:
  1718 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
  1721 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;		None
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		wreg
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMMON   BANK0
  1733 ;;      Params:         2       0
  1734 ;;      Locals:         0       0
  1735 ;;      Temps:          0       0
  1736 ;;      Totals:         2       0
  1737 ;;Total ram usage:        2 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; Hardware stack levels required when called:    3
  1740 ;; This function calls:
  1741 ;;		Nothing
  1742 ;; This function is called by:
  1743 ;;		_TMR2_Initialize
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           
  1748                           ;psect for function _TMR2_SetInterruptHandler
  1749  013E                     _TMR2_SetInterruptHandler:	
  1750                           
  1751                           ;tmr2.c: 138: TMR2_InterruptHandler = InterruptHandler;
  1752                           
  1753                           ;incstack = 0
  1754                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  1755  013E  0872               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  1756  013F  0020               	movlb	0	; select bank0
  1757  0140  00A5               	movwf	_TMR2_InterruptHandler+1
  1758  0141  0871               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  1759  0142  00A4               	movwf	_TMR2_InterruptHandler
  1760  0143  0008               	return
  1761  0144                     __end_of_TMR2_SetInterruptHandler:	
  1762                           
  1763                           	psect	text6
  1764  00B3                     __ptext6:	
  1765 ;; *************** function _TMR1_Initialize *****************
  1766 ;; Defined at:
  1767 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		wreg, status,2, status,0, pclath, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMMON   BANK0
  1781 ;;      Params:         0       0
  1782 ;;      Locals:         0       0
  1783 ;;      Temps:          0       0
  1784 ;;      Totals:         0       0
  1785 ;;Total ram usage:        0 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; Hardware stack levels required when called:    4
  1788 ;; This function calls:
  1789 ;;		_TMR1_SetInterruptHandler
  1790 ;;		_TMR1_StartTimer
  1791 ;; This function is called by:
  1792 ;;		_SYSTEM_Initialize
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           
  1797                           ;psect for function _TMR1_Initialize
  1798  00B3                     _TMR1_Initialize:	
  1799                           
  1800                           ;tmr1.c: 68: T1CON = 0x30;
  1801                           
  1802                           ;incstack = 0
  1803                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1804  00B3  3030               	movlw	48
  1805  00B4  0020               	movlb	0	; select bank0
  1806  00B5  0098               	movwf	24	;volatile
  1807                           
  1808                           ;tmr1.c: 71: T1GCON = 0x00;
  1809  00B6  0199               	clrf	25	;volatile
  1810                           
  1811                           ;tmr1.c: 74: TMR1H = 0x0B;
  1812  00B7  300B               	movlw	11
  1813  00B8  0097               	movwf	23	;volatile
  1814                           
  1815                           ;tmr1.c: 77: TMR1L = 0xDC;
  1816  00B9  30DC               	movlw	220
  1817  00BA  0096               	movwf	22	;volatile
  1818                           
  1819                           ;tmr1.c: 80: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1820  00BB  0817               	movf	23,w	;volatile
  1821  00BC  00F6               	movwf	_timer1ReloadVal+1	;volatile
  1822  00BD  0816               	movf	22,w	;volatile
  1823  00BE  00F5               	movwf	_timer1ReloadVal	;volatile
  1824                           
  1825                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
  1826  00BF  1011               	bcf	17,0	;volatile
  1827                           
  1828                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
  1829  00C0  0021               	movlb	1	; select bank1
  1830  00C1  1411               	bsf	17,0	;volatile
  1831                           
  1832                           ;tmr1.c: 89: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  1833  00C2  3064               	movlw	low _TMR1_DefaultInterruptHandler
  1834  00C3  00F1               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1835  00C4  3001               	movlw	high _TMR1_DefaultInterruptHandler
  1836  00C5  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1837  00C6  2144               	fcall	_TMR1_SetInterruptHandler
  1838                           
  1839                           ;tmr1.c: 92: TMR1_StartTimer();
  1840  00C7  215E               	fcall	_TMR1_StartTimer
  1841  00C8  0008               	return
  1842  00C9                     __end_of_TMR1_Initialize:	
  1843                           
  1844                           	psect	text7
  1845  015E                     __ptext7:	
  1846 ;; *************** function _TMR1_StartTimer *****************
  1847 ;; Defined at:
  1848 ;;		line 95 in file "mcc_generated_files/tmr1.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;		None
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;		None
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  1    wreg      void 
  1855 ;; Registers used:
  1856 ;;		None
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMMON   BANK0
  1862 ;;      Params:         0       0
  1863 ;;      Locals:         0       0
  1864 ;;      Temps:          0       0
  1865 ;;      Totals:         0       0
  1866 ;;Total ram usage:        0 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    3
  1869 ;; This function calls:
  1870 ;;		Nothing
  1871 ;; This function is called by:
  1872 ;;		_TMR1_Initialize
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           
  1877                           ;psect for function _TMR1_StartTimer
  1878  015E                     _TMR1_StartTimer:	
  1879                           
  1880                           ;tmr1.c: 98: T1CONbits.TMR1ON = 1;
  1881                           
  1882                           ;incstack = 0
  1883                           ; Regs used in _TMR1_StartTimer: []
  1884  015E  0020               	movlb	0	; select bank0
  1885  015F  1418               	bsf	24,0	;volatile
  1886  0160  0008               	return
  1887  0161                     __end_of_TMR1_StartTimer:	
  1888                           
  1889                           	psect	text8
  1890  0144                     __ptext8:	
  1891 ;; *************** function _TMR1_SetInterruptHandler *****************
  1892 ;; Defined at:
  1893 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
  1896 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;		None
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  1    wreg      void 
  1901 ;; Registers used:
  1902 ;;		wreg
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMMON   BANK0
  1908 ;;      Params:         2       0
  1909 ;;      Locals:         0       0
  1910 ;;      Temps:          0       0
  1911 ;;      Totals:         2       0
  1912 ;;Total ram usage:        2 bytes
  1913 ;; Hardware stack levels used:    1
  1914 ;; Hardware stack levels required when called:    3
  1915 ;; This function calls:
  1916 ;;		Nothing
  1917 ;; This function is called by:
  1918 ;;		_TMR1_Initialize
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           
  1923                           ;psect for function _TMR1_SetInterruptHandler
  1924  0144                     _TMR1_SetInterruptHandler:	
  1925                           
  1926                           ;tmr1.c: 177: TMR1_InterruptHandler = InterruptHandler;
  1927                           
  1928                           ;incstack = 0
  1929                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  1930  0144  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  1931  0145  0020               	movlb	0	; select bank0
  1932  0146  00A3               	movwf	_TMR1_InterruptHandler+1
  1933  0147  0871               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  1934  0148  00A2               	movwf	_TMR1_InterruptHandler
  1935  0149  0008               	return
  1936  014A                     __end_of_TMR1_SetInterruptHandler:	
  1937                           
  1938                           	psect	text9
  1939  00DE                     __ptext9:	
  1940 ;; *************** function _TMR0_Initialize *****************
  1941 ;; Defined at:
  1942 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;		None
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;		None
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg, status,2, status,0, pclath, cstack
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMMON   BANK0
  1956 ;;      Params:         0       0
  1957 ;;      Locals:         0       0
  1958 ;;      Temps:          1       0
  1959 ;;      Totals:         1       0
  1960 ;;Total ram usage:        1 bytes
  1961 ;; Hardware stack levels used:    1
  1962 ;; Hardware stack levels required when called:    4
  1963 ;; This function calls:
  1964 ;;		_TMR0_SetInterruptHandler
  1965 ;; This function is called by:
  1966 ;;		_SYSTEM_Initialize
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           
  1971                           ;psect for function _TMR0_Initialize
  1972  00DE                     _TMR0_Initialize:	
  1973                           
  1974                           ;tmr0.c: 70: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | 0xD7 & 0x3F);
  1975                           
  1976                           ;incstack = 0
  1977                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1978  00DE  0021               	movlb	1	; select bank1
  1979  00DF  0815               	movf	21,w	;volatile
  1980  00E0  39C0               	andlw	192
  1981  00E1  3817               	iorlw	23
  1982  00E2  0095               	movwf	21	;volatile
  1983                           
  1984                           ;tmr0.c: 73: TMR0 = 0x86;
  1985  00E3  3086               	movlw	134
  1986  00E4  0020               	movlb	0	; select bank0
  1987  00E5  0095               	movwf	21	;volatile
  1988                           
  1989                           ;tmr0.c: 76: timer0ReloadVal= 134;
  1990  00E6  3086               	movlw	134
  1991  00E7  00F3               	movwf	??_TMR0_Initialize
  1992  00E8  0873               	movf	??_TMR0_Initialize,w
  1993  00E9  00F7               	movwf	_timer0ReloadVal	;volatile
  1994                           
  1995                           ;tmr0.c: 79: INTCONbits.TMR0IF = 0;
  1996  00EA  110B               	bcf	11,2	;volatile
  1997                           
  1998                           ;tmr0.c: 82: INTCONbits.TMR0IE = 1;
  1999  00EB  168B               	bsf	11,5	;volatile
  2000                           
  2001                           ;tmr0.c: 85: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  2002  00EC  3000               	movlw	0
  2003  00ED  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2004  00EE  3000               	movlw	0
  2005  00EF  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2006  00F0  214A               	fcall	_TMR0_SetInterruptHandler
  2007  00F1  0008               	return
  2008  00F2                     __end_of_TMR0_Initialize:	
  2009                           
  2010                           	psect	text10
  2011  014A                     __ptext10:	
  2012 ;; *************** function _TMR0_SetInterruptHandler *****************
  2013 ;; Defined at:
  2014 ;;		line 133 in file "mcc_generated_files/tmr0.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
  2017 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;		None
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  1    wreg      void 
  2022 ;; Registers used:
  2023 ;;		wreg
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMMON   BANK0
  2029 ;;      Params:         2       0
  2030 ;;      Locals:         0       0
  2031 ;;      Temps:          0       0
  2032 ;;      Totals:         2       0
  2033 ;;Total ram usage:        2 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; Hardware stack levels required when called:    3
  2036 ;; This function calls:
  2037 ;;		Nothing
  2038 ;; This function is called by:
  2039 ;;		_TMR0_Initialize
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           
  2044                           ;psect for function _TMR0_SetInterruptHandler
  2045  014A                     _TMR0_SetInterruptHandler:	
  2046                           
  2047                           ;tmr0.c: 134: TMR0_InterruptHandler = InterruptHandler;
  2048                           
  2049                           ;incstack = 0
  2050                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2051  014A  0872               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2052  014B  0020               	movlb	0	; select bank0
  2053  014C  00A1               	movwf	_TMR0_InterruptHandler+1
  2054  014D  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2055  014E  00A0               	movwf	_TMR0_InterruptHandler
  2056  014F  0008               	return
  2057  0150                     __end_of_TMR0_SetInterruptHandler:	
  2058                           
  2059                           	psect	text11
  2060  0102                     __ptext11:	
  2061 ;; *************** function _PIN_MANAGER_Initialize *****************
  2062 ;; Defined at:
  2063 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;		None
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;		None
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg, status,2
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMMON   BANK0
  2077 ;;      Params:         0       0
  2078 ;;      Locals:         0       0
  2079 ;;      Temps:          0       0
  2080 ;;      Totals:         0       0
  2081 ;;Total ram usage:        0 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:    3
  2084 ;; This function calls:
  2085 ;;		Nothing
  2086 ;; This function is called by:
  2087 ;;		_SYSTEM_Initialize
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           
  2092                           ;psect for function _PIN_MANAGER_Initialize
  2093  0102                     _PIN_MANAGER_Initialize:	
  2094                           
  2095                           ;pin_manager.c: 57: LATA = 0x00;
  2096                           
  2097                           ;incstack = 0
  2098                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2099  0102  0022               	movlb	2	; select bank2
  2100  0103  018C               	clrf	12	;volatile
  2101                           
  2102                           ;pin_manager.c: 62: TRISA = 0x1C;
  2103  0104  301C               	movlw	28
  2104  0105  0021               	movlb	1	; select bank1
  2105  0106  008C               	movwf	12	;volatile
  2106                           
  2107                           ;pin_manager.c: 67: ANSELA = 0x14;
  2108  0107  3014               	movlw	20
  2109  0108  0023               	movlb	3	; select bank3
  2110  0109  008C               	movwf	12	;volatile
  2111                           
  2112                           ;pin_manager.c: 72: WPUA = 0x10;
  2113  010A  3010               	movlw	16
  2114  010B  0024               	movlb	4	; select bank4
  2115  010C  008C               	movwf	12	;volatile
  2116                           
  2117                           ;pin_manager.c: 73: OPTION_REGbits.nWPUEN = 0;
  2118  010D  0021               	movlb	1	; select bank1
  2119  010E  1395               	bcf	21,7	;volatile
  2120                           
  2121                           ;pin_manager.c: 79: APFCON = 0x00;
  2122  010F  0022               	movlb	2	; select bank2
  2123  0110  019D               	clrf	29	;volatile
  2124  0111  0008               	return
  2125  0112                     __end_of_PIN_MANAGER_Initialize:	
  2126                           
  2127                           	psect	text12
  2128  0154                     __ptext12:	
  2129 ;; *************** function _OSCILLATOR_Initialize *****************
  2130 ;; Defined at:
  2131 ;;		line 78 in file "mcc_generated_files/mcc.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;		None
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;		None
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  1    wreg      void 
  2138 ;; Registers used:
  2139 ;;		wreg
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMMON   BANK0
  2145 ;;      Params:         0       0
  2146 ;;      Locals:         0       0
  2147 ;;      Temps:          0       0
  2148 ;;      Totals:         0       0
  2149 ;;Total ram usage:        0 bytes
  2150 ;; Hardware stack levels used:    1
  2151 ;; Hardware stack levels required when called:    3
  2152 ;; This function calls:
  2153 ;;		Nothing
  2154 ;; This function is called by:
  2155 ;;		_SYSTEM_Initialize
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           
  2160                           ;psect for function _OSCILLATOR_Initialize
  2161  0154                     _OSCILLATOR_Initialize:	
  2162                           
  2163                           ;mcc.c: 81: OSCCON = 0x38;
  2164                           
  2165                           ;incstack = 0
  2166                           ; Regs used in _OSCILLATOR_Initialize: [wreg]
  2167  0154  3038               	movlw	56
  2168  0155  0021               	movlb	1	; select bank1
  2169  0156  0099               	movwf	25	;volatile
  2170  0157  0008               	return
  2171  0158                     __end_of_OSCILLATOR_Initialize:	
  2172                           
  2173                           	psect	text13
  2174  0122                     __ptext13:	
  2175 ;; *************** function _ADC_Initialize *****************
  2176 ;; Defined at:
  2177 ;;		line 64 in file "mcc_generated_files/adc.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;		None
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;		None
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  1    wreg      void 
  2184 ;; Registers used:
  2185 ;;		wreg, status,2
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMMON   BANK0
  2191 ;;      Params:         0       0
  2192 ;;      Locals:         0       0
  2193 ;;      Temps:          0       0
  2194 ;;      Totals:         0       0
  2195 ;;Total ram usage:        0 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; Hardware stack levels required when called:    3
  2198 ;; This function calls:
  2199 ;;		Nothing
  2200 ;; This function is called by:
  2201 ;;		_SYSTEM_Initialize
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           
  2206                           ;psect for function _ADC_Initialize
  2207  0122                     _ADC_Initialize:	
  2208                           
  2209                           ;adc.c: 69: ADCON0 = 0x01;
  2210                           
  2211                           ;incstack = 0
  2212                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  2213  0122  3001               	movlw	1
  2214  0123  0021               	movlb	1	; select bank1
  2215  0124  009D               	movwf	29	;volatile
  2216                           
  2217                           ;adc.c: 72: ADCON1 = 0xE0;
  2218  0125  30E0               	movlw	224
  2219  0126  009E               	movwf	30	;volatile
  2220                           
  2221                           ;adc.c: 75: ADCON2 = 0x40;
  2222  0127  3040               	movlw	64
  2223  0128  009F               	movwf	31	;volatile
  2224                           
  2225                           ;adc.c: 78: ADRESL = 0x00;
  2226  0129  019B               	clrf	27	;volatile
  2227                           
  2228                           ;adc.c: 81: ADRESH = 0x00;
  2229  012A  019C               	clrf	28	;volatile
  2230                           
  2231                           ;adc.c: 84: PIE1bits.ADIE = 1;
  2232  012B  1711               	bsf	17,6	;volatile
  2233  012C  0008               	return
  2234  012D                     __end_of_ADC_Initialize:	
  2235                           
  2236                           	psect	text14
  2237  00C9                     __ptext14:	
  2238 ;; *************** function _ADC_GetConversion *****************
  2239 ;; Defined at:
  2240 ;;		line 114 in file "mcc_generated_files/adc.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  channel         1    wreg     enum E2504
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;  channel         1    4[COMMON] enum E2504
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  2    1[COMMON] unsigned int 
  2247 ;; Registers used:
  2248 ;;		wreg, status,2, status,0
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMMON   BANK0
  2254 ;;      Params:         2       0
  2255 ;;      Locals:         1       0
  2256 ;;      Temps:          1       0
  2257 ;;      Totals:         4       0
  2258 ;;Total ram usage:        4 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:    3
  2261 ;; This function calls:
  2262 ;;		Nothing
  2263 ;; This function is called by:
  2264 ;;		_main
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           
  2269                           ;psect for function _ADC_GetConversion
  2270  00C9                     _ADC_GetConversion:	
  2271                           
  2272                           ;incstack = 0
  2273                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  2274                           ;ADC_GetConversion@channel stored from wreg
  2275  00C9  00F4               	movwf	ADC_GetConversion@channel
  2276                           
  2277                           ;adc.c: 117: ADCON0bits.CHS = channel;
  2278  00CA  0874               	movf	ADC_GetConversion@channel,w
  2279  00CB  00F3               	movwf	??_ADC_GetConversion
  2280  00CC  0DF3               	rlf	??_ADC_GetConversion,f
  2281  00CD  0DF3               	rlf	??_ADC_GetConversion,f
  2282  00CE  0021               	movlb	1	; select bank1
  2283  00CF  081D               	movf	29,w	;volatile
  2284  00D0  0673               	xorwf	??_ADC_GetConversion,w
  2285  00D1  3983               	andlw	-125
  2286  00D2  0673               	xorwf	??_ADC_GetConversion,w
  2287  00D3  009D               	movwf	29	;volatile
  2288                           
  2289                           ;adc.c: 120: ADCON0bits.ADON = 1;
  2290  00D4  141D               	bsf	29,0	;volatile
  2291                           
  2292                           ;adc.c: 125: ADCON0bits.GO_nDONE = 1;
  2293                           
  2294                           ;adc.c: 122: _delay((unsigned long)((5)*(500000/4000000.0)));
  2295  00D5  0021               	movlb	1	; select bank1
  2296  00D6  149D               	bsf	29,1	;volatile
  2297  00D7                     l54:	
  2298                           ;adc.c: 129: {
  2299                           
  2300                           ;adc.c: 128: while (ADCON0bits.GO_nDONE)
  2301                           
  2302  00D7  189D               	btfsc	29,1	;volatile
  2303  00D8  28D7               	goto	l54
  2304                           
  2305                           ;adc.c: 130: }
  2306                           ;adc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  2307  00D9  081C               	movf	28,w	;volatile
  2308  00DA  00F2               	movwf	?_ADC_GetConversion+1
  2309  00DB  081B               	movf	27,w	;volatile
  2310  00DC  00F1               	movwf	?_ADC_GetConversion
  2311  00DD  0008               	return
  2312  00DE                     __end_of_ADC_GetConversion:	
  2313                           
  2314                           	psect	intentry
  2315  0004                     __pintentry:	
  2316 ;; *************** function _INTERRUPT_InterruptManager *****************
  2317 ;; Defined at:
  2318 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;		None
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;		None
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  1    wreg      void 
  2325 ;; Registers used:
  2326 ;;		wreg, status,2, status,0, pclath, cstack
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMMON   BANK0
  2332 ;;      Params:         0       0
  2333 ;;      Locals:         0       0
  2334 ;;      Temps:          1       0
  2335 ;;      Totals:         1       0
  2336 ;;Total ram usage:        1 bytes
  2337 ;; Hardware stack levels used:    1
  2338 ;; Hardware stack levels required when called:    2
  2339 ;; This function calls:
  2340 ;;		_ADC_ISR
  2341 ;;		_TMR0_ISR
  2342 ;;		_TMR1_ISR
  2343 ;;		_TMR2_ISR
  2344 ;; This function is called by:
  2345 ;;		Interrupt level 1
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349  0004                     _INTERRUPT_InterruptManager:	
  2350                           
  2351                           ;incstack = 0
  2352  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2353                           
  2354                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  2355  0005  3180               	pagesel	$
  2356  0006  0020               	movlb	0	; select bank0
  2357  0007  087F               	movf	127,w
  2358  0008  00F0               	movwf	??_INTERRUPT_InterruptManager
  2359                           
  2360                           ;interrupt_manager.c: 54: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  2361  0009  1A8B               	btfsc	11,5	;volatile
  2362  000A  1D0B               	btfss	11,2	;volatile
  2363  000B  280E               	goto	i1l77
  2364                           
  2365                           ;interrupt_manager.c: 55: {
  2366                           ;interrupt_manager.c: 56: TMR0_ISR();
  2367  000C  209A               	fcall	_TMR0_ISR
  2368                           
  2369                           ;interrupt_manager.c: 57: }
  2370  000D  282B               	goto	i1l85
  2371  000E                     i1l77:	
  2372                           
  2373                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits
      +                          .ADIF == 1)
  2374  000E  1F0B               	btfss	11,6	;volatile
  2375  000F  2818               	goto	i1l79
  2376  0010  0021               	movlb	1	; select bank1
  2377  0011  1F11               	btfss	17,6	;volatile
  2378  0012  2818               	goto	i1l79
  2379  0013  0020               	movlb	0	; select bank0
  2380  0014  1F11               	btfss	17,6	;volatile
  2381  0015  2818               	goto	i1l79
  2382                           
  2383                           ;interrupt_manager.c: 59: {
  2384                           ;interrupt_manager.c: 60: ADC_ISR();
  2385  0016  2161               	fcall	_ADC_ISR
  2386                           
  2387                           ;interrupt_manager.c: 61: }
  2388  0017  282B               	goto	i1l85
  2389  0018                     i1l79:	
  2390                           
  2391                           ;interrupt_manager.c: 62: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  2392  0018  1F0B               	btfss	11,6	;volatile
  2393  0019  2822               	goto	i1l81
  2394  001A  0021               	movlb	1	; select bank1
  2395  001B  1C91               	btfss	17,1	;volatile
  2396  001C  2822               	goto	i1l81
  2397  001D  0020               	movlb	0	; select bank0
  2398  001E  1C91               	btfss	17,1	;volatile
  2399  001F  2822               	goto	i1l81
  2400                           
  2401                           ;interrupt_manager.c: 63: {
  2402                           ;interrupt_manager.c: 64: TMR2_ISR();
  2403  0020  212D               	fcall	_TMR2_ISR
  2404                           
  2405                           ;interrupt_manager.c: 65: }
  2406  0021  282B               	goto	i1l85
  2407  0022                     i1l81:	
  2408                           
  2409                           ;interrupt_manager.c: 66: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
  2410  0022  1F0B               	btfss	11,6	;volatile
  2411  0023  282B               	goto	i1l85
  2412  0024  0021               	movlb	1	; select bank1
  2413  0025  1C11               	btfss	17,0	;volatile
  2414  0026  282B               	goto	i1l85
  2415  0027  0020               	movlb	0	; select bank0
  2416  0028  1C11               	btfss	17,0	;volatile
  2417  0029  282B               	goto	i1l85
  2418                           
  2419                           ;interrupt_manager.c: 67: {
  2420                           ;interrupt_manager.c: 68: TMR1_ISR();
  2421  002A  2112               	fcall	_TMR1_ISR
  2422  002B                     i1l85:	
  2423                           ;interrupt_manager.c: 70: else
  2424                           ;interrupt_manager.c: 71: {
  2425                           
  2426                           ;interrupt_manager.c: 69: }
  2427                           
  2428  002B  0870               	movf	??_INTERRUPT_InterruptManager,w
  2429  002C  0020               	movlb	0	; select bank0
  2430  002D  00FF               	movwf	127
  2431  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2432  002F  0009               	retfie
  2433  0030                     __end_of_INTERRUPT_InterruptManager:	
  2434                           
  2435                           	psect	text16
  2436  012D                     __ptext16:	
  2437 ;; *************** function _TMR2_ISR *****************
  2438 ;; Defined at:
  2439 ;;		line 122 in file "mcc_generated_files/tmr2.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;		None
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;		None
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      void 
  2446 ;; Registers used:
  2447 ;;		wreg
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0
  2453 ;;      Params:         0       0
  2454 ;;      Locals:         0       0
  2455 ;;      Temps:          0       0
  2456 ;;      Totals:         0       0
  2457 ;;Total ram usage:        0 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; This function calls:
  2460 ;;		Nothing
  2461 ;; This function is called by:
  2462 ;;		_INTERRUPT_InterruptManager
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           
  2467                           ;psect for function _TMR2_ISR
  2468  012D                     _TMR2_ISR:	
  2469                           
  2470                           ;tmr2.c: 126: PIR1bits.TMR2IF = 0;
  2471                           
  2472                           ;incstack = 0
  2473                           ; Regs used in _TMR2_ISR: [wreg]
  2474  012D  0020               	movlb	0	; select bank0
  2475  012E  1091               	bcf	17,1	;volatile
  2476                           
  2477                           ;tmr2.c: 130: if(RunCycle = 1)
  2478  012F  01FB               	clrf	_RunCycle
  2479  0130  0AFB               	incf	_RunCycle,f
  2480                           
  2481                           ;tmr2.c: 131: {
  2482                           ;tmr2.c: 132: CycleTime--;
  2483  0131  30FF               	movlw	255
  2484  0132  07F8               	addwf	_CycleTime,f	;volatile
  2485  0133  30FF               	movlw	255
  2486  0134  3DF9               	addwfc	_CycleTime+1,f	;volatile
  2487  0135  0008               	return
  2488  0136                     __end_of_TMR2_ISR:	
  2489                           
  2490                           	psect	text17
  2491  0112                     __ptext17:	
  2492 ;; *************** function _TMR1_ISR *****************
  2493 ;; Defined at:
  2494 ;;		line 160 in file "mcc_generated_files/tmr1.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;		None
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;		None
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      void 
  2501 ;; Registers used:
  2502 ;;		wreg, status,2, status,0, pclath, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0
  2508 ;;      Params:         0       0
  2509 ;;      Locals:         0       0
  2510 ;;      Temps:          0       0
  2511 ;;      Totals:         0       0
  2512 ;;Total ram usage:        0 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; Hardware stack levels required when called:    1
  2515 ;; This function calls:
  2516 ;;		Absolute function
  2517 ;;		_TMR1_DefaultInterruptHandler
  2518 ;; This function is called by:
  2519 ;;		_INTERRUPT_InterruptManager
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           
  2524                           ;psect for function _TMR1_ISR
  2525  0112                     _TMR1_ISR:	
  2526                           
  2527                           ;tmr1.c: 164: PIR1bits.TMR1IF = 0;
  2528                           
  2529                           ;incstack = 0
  2530                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  2531  0112  0020               	movlb	0	; select bank0
  2532  0113  1011               	bcf	17,0	;volatile
  2533                           
  2534                           ;tmr1.c: 166: TMR1H = (timer1ReloadVal >> 8);
  2535  0114  0876               	movf	_timer1ReloadVal+1,w	;volatile
  2536  0115  0097               	movwf	23	;volatile
  2537                           
  2538                           ;tmr1.c: 167: TMR1L = timer1ReloadVal;
  2539  0116  0875               	movf	_timer1ReloadVal,w	;volatile
  2540  0117  0096               	movwf	22	;volatile
  2541                           
  2542                           ;tmr1.c: 169: if(TMR1_InterruptHandler)
  2543  0118  0822               	movf	_TMR1_InterruptHandler,w
  2544  0119  0423               	iorwf	_TMR1_InterruptHandler+1,w
  2545  011A  1903               	btfsc	3,2
  2546  011B  0008               	return
  2547                           
  2548                           ;tmr1.c: 170: {
  2549                           ;tmr1.c: 171: TMR1_InterruptHandler();
  2550  011C  0823               	movf	_TMR1_InterruptHandler+1,w
  2551  011D  008A               	movwf	10
  2552  011E  0822               	movf	_TMR1_InterruptHandler,w
  2553  011F  000A               	callw
  2554  0120  3181               	pagesel	$
  2555  0121  0008               	return
  2556  0122                     __end_of_TMR1_ISR:	
  2557                           
  2558                           	psect	text18
  2559  0164                     __ptext18:	
  2560 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2561 ;; Defined at:
  2562 ;;		line 180 in file "mcc_generated_files/tmr1.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;		None
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1    wreg      void 
  2569 ;; Registers used:
  2570 ;;		None
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMMON   BANK0
  2576 ;;      Params:         0       0
  2577 ;;      Locals:         0       0
  2578 ;;      Temps:          0       0
  2579 ;;      Totals:         0       0
  2580 ;;Total ram usage:        0 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; This function calls:
  2583 ;;		Nothing
  2584 ;; This function is called by:
  2585 ;;		_TMR1_Initialize
  2586 ;;		_TMR1_ISR
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           
  2591                           ;psect for function _TMR1_DefaultInterruptHandler
  2592  0164                     _TMR1_DefaultInterruptHandler:	
  2593                           
  2594                           ;incstack = 0
  2595                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  2596  0164  0008               	return
  2597  0165                     __end_of_TMR1_DefaultInterruptHandler:	
  2598                           
  2599                           	psect	text19
  2600  009A                     __ptext19:	
  2601 ;; *************** function _TMR0_ISR *****************
  2602 ;; Defined at:
  2603 ;;		line 110 in file "mcc_generated_files/tmr0.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;		None
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;		None
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      void 
  2610 ;; Registers used:
  2611 ;;		wreg, status,2, status,0
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMMON   BANK0
  2617 ;;      Params:         0       0
  2618 ;;      Locals:         0       0
  2619 ;;      Temps:          0       0
  2620 ;;      Totals:         0       0
  2621 ;;Total ram usage:        0 bytes
  2622 ;; Hardware stack levels used:    1
  2623 ;; This function calls:
  2624 ;;		Nothing
  2625 ;; This function is called by:
  2626 ;;		_INTERRUPT_InterruptManager
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           
  2631                           ;psect for function _TMR0_ISR
  2632  009A                     _TMR0_ISR:	
  2633                           
  2634                           ;tmr0.c: 114: INTCONbits.TMR0IF = 0;
  2635                           
  2636                           ;incstack = 0
  2637                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0]
  2638  009A  110B               	bcf	11,2	;volatile
  2639                           
  2640                           ;tmr0.c: 116: TMR0 = timer0ReloadVal;
  2641  009B  0877               	movf	_timer0ReloadVal,w	;volatile
  2642  009C  0020               	movlb	0	; select bank0
  2643  009D  0095               	movwf	21	;volatile
  2644                           
  2645                           ;tmr0.c: 120: if(StartupCounter == 0)
  2646  009E  087A               	movf	_StartupCounter,w	;volatile
  2647  009F  1D03               	btfss	3,2
  2648  00A0  28A5               	goto	i1l823
  2649                           
  2650                           ;tmr0.c: 121: {
  2651                           ;tmr0.c: 122: StartupCounter = 0;
  2652  00A1  01FA               	clrf	_StartupCounter	;volatile
  2653                           
  2654                           ;tmr0.c: 123: do { LATAbits.LATA1 = 0; } while(0);
  2655  00A2  0022               	movlb	2	; select bank2
  2656  00A3  108C               	bcf	12,1	;volatile
  2657                           
  2658                           ;tmr0.c: 124: }
  2659  00A4  0008               	return
  2660  00A5                     i1l823:	
  2661                           
  2662                           ;tmr0.c: 125: else
  2663                           ;tmr0.c: 126: {
  2664                           ;tmr0.c: 127: StartupCounter--;
  2665  00A5  3001               	movlw	1
  2666  00A6  02FA               	subwf	_StartupCounter,f	;volatile
  2667                           
  2668                           ;tmr0.c: 128: do { LATAbits.LATA1 = ~LATAbits.LATA1; } while(0);
  2669  00A7  1003               	clrc
  2670  00A8  0022               	movlb	2	; select bank2
  2671  00A9  1C8C               	btfss	12,1	;volatile
  2672  00AA  1403               	setc
  2673  00AB  1C03               	btfss	3,0
  2674  00AC  28B0               	goto	u3_20
  2675  00AD  0022               	movlb	2	; select bank2
  2676  00AE  148C               	bsf	12,1	;volatile
  2677  00AF  0008               	return
  2678  00B0                     u3_20:	
  2679  00B0  0022               	movlb	2	; select bank2
  2680  00B1  108C               	bcf	12,1	;volatile
  2681  00B2  0008               	return
  2682  00B3                     __end_of_TMR0_ISR:	
  2683                           
  2684                           	psect	text20
  2685  0161                     __ptext20:	
  2686 ;; *************** function _ADC_ISR *****************
  2687 ;; Defined at:
  2688 ;;		line 137 in file "mcc_generated_files/adc.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;		None
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;		None
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  1    wreg      void 
  2695 ;; Registers used:
  2696 ;;		None
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMMON   BANK0
  2702 ;;      Params:         0       0
  2703 ;;      Locals:         0       0
  2704 ;;      Temps:          0       0
  2705 ;;      Totals:         0       0
  2706 ;;Total ram usage:        0 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; This function calls:
  2709 ;;		Nothing
  2710 ;; This function is called by:
  2711 ;;		_INTERRUPT_InterruptManager
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           
  2716                           ;psect for function _ADC_ISR
  2717  0161                     _ADC_ISR:	
  2718                           
  2719                           ;adc.c: 140: PIR1bits.ADIF = 0;
  2720                           
  2721                           ;incstack = 0
  2722                           ; Regs used in _ADC_ISR: []
  2723  0161  0020               	movlb	0	; select bank0
  2724  0162  1311               	bcf	17,6	;volatile
  2725  0163  0008               	return
  2726  0164                     __end_of_ADC_ISR:	
  2727  007E                     btemp	set	126	;btemp
  2728  007E                     int$flags	set	126
  2729  007E                     wtemp	set	126
  2730  007E                     wtemp0	set	126
  2731  0080                     wtemp1	set	128
  2732  0082                     wtemp2	set	130
  2733  0084                     wtemp3	set	132
  2734  0086                     wtemp4	set	134
  2735  0088                     wtemp5	set	136
  2736  007F                     wtemp6	set	127
  2737  007E                     ttemp	set	126
  2738  007E                     ttemp0	set	126
  2739  0081                     ttemp1	set	129
  2740  0084                     ttemp2	set	132
  2741  0087                     ttemp3	set	135
  2742  007F                     ttemp4	set	127
  2743  007E                     ltemp	set	126
  2744  007E                     ltemp0	set	126
  2745  0082                     ltemp1	set	130
  2746  0086                     ltemp2	set	134
  2747  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         1
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            48      2       9

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_ADC_GetConversion
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     280
                                              0 BANK0      2     2      0
                  _ADC_GetConversion
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     258
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      86
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      86
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0      86
                                              3 COMMON     1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      86
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0       0
                                              0 COMMON     1     1      0
                            _ADC_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _TMR0_ISR
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
   _TMR2_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              30      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            30      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               30      2       9       5       18.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0      15       6        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
DATA                 0      0      15       7        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat Dec 23 21:02:12 2017

        __end_of_TMR2_SetInterruptHandler 0144                               __CFG_CP$OFF 0000  
                                      l54 00D7                           _timer0ReloadVal 0077  
                                     l332 008A                                       l318 0063  
                                     l336 0098                                       l339 0099  
                                     _PR2 001B                                       u505 0084  
                                     u527 004F                                       u537 006F  
                         _timer1ReloadVal 0075                           __end_of_ADC_ISR 0164  
                         _TMR2_Initialize 00F2                              __CFG_BORV$LO 0000  
                            __CFG_LVP$OFF 0000                                      l1131 0055  
                                    l1133 0062                                      l1145 007A  
                                    l1129 0045                                      l1139 006B  
                                    _LATA 010C                                      i1l81 0022  
                                    i1l85 002B                                      i1l77 000E  
                                    i1l79 0018                                      _TMR0 0015  
                                    _TMR2 001A                                      _WPUA 020C  
                                    u3_20 00B0                              __CFG_WRT$OFF 0000  
                                    _main 003B                                      btemp 007E  
                           __CFG_BOREN$ON 0000                                      ltemp 007E  
                                    start 0030                                      ttemp 007E  
                                    wtemp 007E                ??_TMR1_SetInterruptHandler 0073  
                 __end_of_TMR0_Initialize 00F2            __size_of_OSCILLATOR_Initialize 0004  
           __end_of_OSCILLATOR_Initialize 0158                                     ?_main 0070  
                           __CFG_WDTE$OFF 0000                           _TMR1_StartTimer 015E  
                                   _T1CON 0018                                     _T2CON 001C  
                                   i1l823 00A5                                     _TMR1H 0017  
                                   _TMR1L 0016                                     _TRISA 008C  
       __size_of_TMR0_SetInterruptHandler 0006                 ?_TMR0_SetInterruptHandler 0071  
                        __end_of_TMR0_ISR 00B3                          __end_of_TMR1_ISR 0122  
                        __end_of_TMR2_ISR 0136                            _WDT_Initialize 0150  
                 __end_of_TMR1_Initialize 00C9                                     pclath 000A  
                                   ltemp0 007E                                     ltemp1 0082  
                                   ltemp2 0086                                     ltemp3 0080  
                                   ttemp0 007E                                     ttemp1 0081  
                                   ttemp2 0084                                     ttemp3 0087  
                                   ttemp4 007F                                     status 0003  
                                   wtemp0 007E                                     wtemp1 0080  
                                   wtemp2 0082                                     wtemp3 0084  
                                   wtemp4 0086                                     wtemp5 0088  
                                   wtemp6 007F                           _TMR2_StartTimer 015B  
                          __CFG_MCLRE$OFF 0000                           __initialization 0031  
                            __end_of_main 009A                   __end_of_TMR2_Initialize 0102  
                               ??_ADC_ISR 0070                            __CFG_LPBOR$OFF 0000  
             ?_INTERRUPT_InterruptManager 0070                  _TMR2_SetInterruptHandler 013E  
                                  ??_main 0027                    __end_of_WDT_Initialize 0154  
                                  _ADCON0 009D                                    _ADCON1 009E  
                                  _ADCON2 009F                                    _ADRESH 009C  
                                  _ADRESL 009B                                    _APFCON 011D  
                                  _ANSELA 018C                                    _T1GCON 0019  
                                  _OSCCON 0099                                    _WDTCON 0097  
                          __CFG_PWRTE$OFF 0000      __end_of_TMR1_DefaultInterruptHandler 0165  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 0164  
                 __end_of_TMR1_StartTimer 0161                            __CFG_STVREN$ON 0000  
                        ?_TMR0_Initialize 0070                              __pdataCOMMON 0078  
                         ?_WDT_Initialize 0070                  ADC_GetConversion@channel 0074  
                 __end_of_TMR2_StartTimer 015E  TMR2_SetInterruptHandler@InterruptHandler 0071  
TMR0_SetInterruptHandler@InterruptHandler 0071  TMR1_SetInterruptHandler@InterruptHandler 0071  
                        ?_TMR1_Initialize 0070                         _SYSTEM_Initialize 0136  
                 __end_of__initialization 0038                        ?_SYSTEM_Initialize 0070  
                          __pcstackCOMMON 0070                       ??_SYSTEM_Initialize 0074  
                               ?_TMR0_ISR 0070                                 ?_TMR1_ISR 0070  
                               ?_TMR2_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                        ?_TMR2_Initialize 0070                            _OPTION_REGbits 0095  
               __end_of_SYSTEM_Initialize 013E                                __pnvCOMMON 0075  
                              __pmaintext 003B          __end_of_TMR0_SetInterruptHandler 0150  
                        ?_TMR1_StartTimer 0070                                ??_TMR0_ISR 0070  
                              ??_TMR1_ISR 0070                                ??_TMR2_ISR 0070  
                              __pintentry 0004                                   _ADC_ISR 0161  
                 __size_of_ADC_Initialize 000B                          ?_TMR2_StartTimer 0070  
                                 _Counter 0026                ??_TMR2_SetInterruptHandler 0073  
                                 __ptext1 0136                                   __ptext2 0150  
                                 __ptext3 00F2                                   __ptext4 015B  
                                 __ptext5 013E                                   __ptext6 00B3  
                                 __ptext7 015E                                   __ptext8 0144  
                                 __ptext9 00DE            ??_TMR1_DefaultInterruptHandler 0070  
                               _T1CONbits 0018                     _OSCILLATOR_Initialize 0154  
                               _T2CONbits 001C         __size_of_TMR1_SetInterruptHandler 0006  
                ??_PIN_MANAGER_Initialize 0071                 ?_TMR1_SetInterruptHandler 0071  
              __size_of_SYSTEM_Initialize 0008                      end_of_initialization 0038  
                        ??_WDT_Initialize 0071                  _TMR0_SetInterruptHandler 014A  
                               _PORTAbits 000C                          __CFG_FOSC$INTOSC 0000  
            _TMR2_DefaultInterruptHandler 0000                             __pidataCOMMON 0158  
                       __size_of_TMR0_ISR 0019                         __size_of_TMR1_ISR 0010  
                       __size_of_TMR2_ISR 0009                            _ADC_Initialize 0122  
                  ?_OSCILLATOR_Initialize 0070                                 _CycleTime 0078  
                     start_initialization 0031                  __size_of_TMR0_Initialize 0014  
         __size_of_PIN_MANAGER_Initialize 0010                  __size_of_TMR1_Initialize 0016  
                  __end_of_ADC_Initialize 012D                                  ?_ADC_ISR 0070  
                             __pbssCOMMON 007B                                 ___latbits 0000  
                           __pcstackBANK0 0027                  __size_of_TMR2_Initialize 0010  
                   _TMR0_InterruptHandler 0020                                 __pnvBANK0 0020  
                  _PIN_MANAGER_Initialize 0102          __end_of_TMR1_SetInterruptHandler 014A  
                         ?_ADC_Initialize 0070              ??_INTERRUPT_InterruptManager 0070  
                __size_of_TMR1_StartTimer 0003                         ??_TMR0_Initialize 0073  
                                _LATAbits 010C                                  _PIE1bits 0091  
                __size_of_TMR2_StartTimer 0003       __size_of_INTERRUPT_InterruptManager 002C  
              ??_TMR0_SetInterruptHandler 0073                                  _PIR1bits 0011  
                                _TMR0_ISR 009A                                  _TMR1_ISR 0112  
                                _TMR2_ISR 012D                         ??_TMR1_Initialize 0073  
                        __size_of_ADC_ISR 0003                                _ADCON0bits 009D  
       __size_of_TMR2_SetInterruptHandler 0006                 ?_TMR2_SetInterruptHandler 0071  
                       ??_TMR2_Initialize 0073                         _ADC_GetConversion 00C9  
                                _RunCycle 007B                   ??_OSCILLATOR_Initialize 0071  
                      ?_ADC_GetConversion 0071                  _TMR1_SetInterruptHandler 0144  
                   _TMR1_InterruptHandler 0022                       ??_ADC_GetConversion 0073  
                                __ptext10 014A                                  __ptext11 0102  
                                __ptext20 0161                                  __ptext12 0154  
                                __ptext13 0122                                _T1GCONbits 0019  
                                __ptext14 00C9                                  __ptext16 012D  
                                __ptext17 0112                                  __ptext18 0164  
                                __ptext19 009A                         ??_TMR1_StartTimer 0071  
                           __size_of_main 005F              _TMR0_DefaultInterruptHandler 0000  
               __end_of_ADC_GetConversion 00DE                                  int$flags 007E  
                       ??_TMR2_StartTimer 0071        __end_of_INTERRUPT_InterruptManager 0030  
              _INTERRUPT_InterruptManager 0004                                _INTCONbits 000B  
                 __size_of_WDT_Initialize 0004                                  intlevel1 0000  
                 ?_PIN_MANAGER_Initialize 0070                         __CFG_CLKOUTEN$OFF 0000  
                        ??_ADC_Initialize 0071                            _StartupCounter 007A  
                              _OPTION_REG 0095                           _TMR0_Initialize 00DE  
          __end_of_PIN_MANAGER_Initialize 0112                     _TMR2_InterruptHandler 0024  
              __size_of_ADC_GetConversion 0015                           _TMR1_Initialize 00B3  
